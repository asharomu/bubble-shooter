Component: ARM Compiler 5.06 update 5 (build 528) Tool: armlink [4d35e2]

==============================================================================

Section Cross References

    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.append_char) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayChar) for GLCD_DisplayChar
    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(i.last_line) for last_line
    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(.data) for last_col_cahche
    glcd_scroll.o(i.append_char) refers to glcd_scroll.o(.bss) for chache
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_Init) for GLCD_Init
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_SetBackColor) for GLCD_SetBackColor
    glcd_scroll.o(i.init_scroll) refers to glcd_spi_lpc1700.o(i.GLCD_SetTextColor) for GLCD_SetTextColor
    glcd_scroll.o(i.init_scroll) refers to glcd_scroll.o(.data) for cache_start
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveUp) for moveUp
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveDown) for moveDown
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveFirst) for moveFirst
    glcd_scroll.o(i.joyStickBusyWaitingMonitor) refers to glcd_scroll.o(i.moveLast) for moveLast
    glcd_scroll.o(i.last_line) refers to glcd_scroll.o(.data) for cache_start
    glcd_scroll.o(i.last_window_line) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(i.last_line) for last_line
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(i.last_window_line) for last_window_line
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveDown) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.moveFirst) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveFirst) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(i.last_line) for last_line
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(i.last_window_line) for last_window_line
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveLast) refers to glcd_scroll.o(.data) for cache_size
    glcd_scroll.o(i.moveUp) refers to glcd_scroll.o(i.refresh_lcd) for refresh_lcd
    glcd_scroll.o(i.moveUp) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.print_string) refers to glcd_scroll.o(i.print_text) for print_text
    glcd_scroll.o(i.print_text) refers to glcd_scroll.o(i.append_char) for append_char
    glcd_scroll.o(i.refresh_lcd) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    glcd_scroll.o(i.refresh_lcd) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    glcd_scroll.o(i.refresh_lcd) refers to glcd_scroll.o(.data) for window_start
    glcd_scroll.o(i.refresh_lcd) refers to glcd_scroll.o(.bss) for chache
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_Bargraph) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_Bitmap) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.GLCD_WindowMax) for GLCD_WindowMax
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_Clear) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_ClearLn) refers to glcd_spi_lpc1700.o(i.GLCD_WindowMax) for GLCD_WindowMax
    glcd_spi_lpc1700.o(i.GLCD_ClearLn) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    glcd_spi_lpc1700.o(i.GLCD_DisplayChar) refers to glcd_spi_lpc1700.o(i.GLCD_DrawChar) for GLCD_DrawChar
    glcd_spi_lpc1700.o(i.GLCD_DisplayChar) refers to glcd_spi_lpc1700.o(.constdata) for Font_6x8_h
    glcd_spi_lpc1700.o(i.GLCD_DisplayString) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayChar) for GLCD_DisplayChar
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_dat_start) for wr_dat_start
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_dat_only) for wr_dat_only
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(i.wr_dat_stop) for wr_dat_stop
    glcd_spi_lpc1700.o(i.GLCD_DrawChar) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.rd_id_man) for rd_id_man
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.rd_reg) for rd_reg
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(i.delay) for delay
    glcd_spi_lpc1700.o(i.GLCD_Init) refers to glcd_spi_lpc1700.o(.data) for Himax
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(i.wr_dat) for wr_dat
    glcd_spi_lpc1700.o(i.GLCD_PutPixel) refers to glcd_spi_lpc1700.o(.data) for Himax
    glcd_spi_lpc1700.o(i.GLCD_SetBackColor) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_SetTextColor) refers to glcd_spi_lpc1700.o(.data) for Color
    glcd_spi_lpc1700.o(i.GLCD_SetWindow) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.GLCD_SetWindow) refers to glcd_spi_lpc1700.o(.data) for Himax
    glcd_spi_lpc1700.o(i.GLCD_WindowMax) refers to glcd_spi_lpc1700.o(i.GLCD_SetWindow) for GLCD_SetWindow
    glcd_spi_lpc1700.o(i.GLCD_WrCmd) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.GLCD_WrReg) refers to glcd_spi_lpc1700.o(i.wr_reg) for wr_reg
    glcd_spi_lpc1700.o(i.rd_id_man) refers to glcd_spi_lpc1700.o(i.spi_tran_man) for spi_tran_man
    glcd_spi_lpc1700.o(i.rd_reg) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.rd_reg) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.spi_tran_man) refers to glcd_spi_lpc1700.o(i.delay) for delay
    glcd_spi_lpc1700.o(i.wr_cmd) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_dat) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_dat_only) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_dat_start) refers to glcd_spi_lpc1700.o(i.spi_tran) for spi_tran
    glcd_spi_lpc1700.o(i.wr_reg) refers to glcd_spi_lpc1700.o(i.wr_cmd) for wr_cmd
    glcd_spi_lpc1700.o(i.wr_reg) refers to glcd_spi_lpc1700.o(i.wr_dat) for wr_dat
    uart.o(i.FreeRcv) refers to uart.o(i.Free) for Free
    uart.o(i.FreeRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.FreeSnd) refers to uart.o(i.Free) for Free
    uart.o(i.FreeSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.LockRcv) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockRcv) refers to uart.o(.data) for RcvLock0
    uart.o(i.LockSnd) refers to uart.o(i.Lock) for Lock
    uart.o(i.LockSnd) refers to uart.o(.data) for SndLock0
    uart.o(i.UART0_IRQHandler) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UART0_IRQHandler) refers to uart.o(.data) for UART0Count
    uart.o(i.UART1_IRQHandler) refers to uart.o(.bss) for UART1Buffer
    uart.o(i.UART1_IRQHandler) refers to uart.o(.data) for UART1Count
    uart.o(i.UARTInit) refers to uart.o(i.getFrequency) for getFrequency
    uart.o(i.UARTInit) refers to uart.o(i.__NVIC_EnableIRQ) for __NVIC_EnableIRQ
    uart.o(i.UARTInit) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTInit) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTRecieve) refers to uart.o(i.LockRcv) for LockRcv
    uart.o(i.UARTRecieve) refers to uart.o(i.FreeRcv) for FreeRcv
    uart.o(i.UARTRecieve) refers to uart.o(.data) for UART0Count
    uart.o(i.UARTRecieve) refers to uart.o(.bss) for UART0Buffer
    uart.o(i.UARTSend) refers to uart.o(i.LockSnd) for LockSnd
    uart.o(i.UARTSend) refers to uart.o(i.FreeSnd) for FreeSnd
    uart.o(i.UARTSend) refers to uart.o(.data) for UART0TxEmpty
    uart.o(i.getFrequency) refers to system_lpc17xx.o(.data) for SystemCoreClock
    main.o(i.Button) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.Button) refers to main.o(.data) for pushed
    main.o(i.Clear_Arrow) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(i.Clear_Arrow) refers to glcd_spi_lpc1700.o(i.GLCD_Bitmap) for GLCD_Bitmap
    main.o(i.Draw_Arrow) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(i.Draw_Arrow) refers to glcd_spi_lpc1700.o(i.GLCD_Bitmap) for GLCD_Bitmap
    main.o(i.Draw_Circle) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(i.Draw_Circle) refers to glcd_spi_lpc1700.o(i.GLCD_Bitmap) for GLCD_Bitmap
    main.o(i.Draw_Circle) refers to main.o(.bss) for color
    main.o(i.Monitor) refers to memcpya.o(.text) for __aeabi_memcpy4
    main.o(i.Monitor) refers to rand.o(.text) for rand
    main.o(i.Monitor) refers to glcd_spi_lpc1700.o(i.GLCD_Init) for GLCD_Init
    main.o(i.Monitor) refers to glcd_spi_lpc1700.o(i.GLCD_Clear) for GLCD_Clear
    main.o(i.Monitor) refers to main.o(i.StartUp) for StartUp
    main.o(i.Monitor) refers to main.o(i.Clear_Arrow) for Clear_Arrow
    main.o(i.Monitor) refers to main.o(i.Draw_Arrow) for Draw_Arrow
    main.o(i.Monitor) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(i.Monitor) refers to main.o(i.clearBubble) for clearBubble
    main.o(i.Monitor) refers to main.o(i.Draw_Circle) for Draw_Circle
    main.o(i.Monitor) refers to glcd_spi_lpc1700.o(i.GLCD_SetTextColor) for GLCD_SetTextColor
    main.o(i.Monitor) refers to glcd_spi_lpc1700.o(i.GLCD_SetBackColor) for GLCD_SetBackColor
    main.o(i.Monitor) refers to glcd_spi_lpc1700.o(i.GLCD_DisplayString) for GLCD_DisplayString
    main.o(i.Monitor) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.Monitor) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(i.Monitor) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i.Monitor) refers to main.o(.constdata) for .constdata
    main.o(i.Monitor) refers to main.o(.data) for arrow_x
    main.o(i.Monitor) refers to main.o(.bss) for disp
    main.o(i.Potentiometer) refers to rtx_mutex.o(.text.osMutexAcquire) for osMutexAcquire
    main.o(i.Potentiometer) refers to dfltui.o(.text) for __aeabi_ui2d
    main.o(i.Potentiometer) refers to ddiv.o(.text) for __aeabi_ddiv
    main.o(i.Potentiometer) refers to dmul.o(.text) for __aeabi_dmul
    main.o(i.Potentiometer) refers to dfixi.o(.text) for __aeabi_d2iz
    main.o(i.Potentiometer) refers to rtx_mutex.o(.text.osMutexRelease) for osMutexRelease
    main.o(i.Potentiometer) refers to rtx_delay.o(.text.osDelay) for osDelay
    main.o(i.Potentiometer) refers to main.o(.data) for mutex_id_2
    main.o(i.Score) refers to rtx_thread.o(.text.osThreadYield) for osThreadYield
    main.o(i.Score) refers to main.o(.data) for points
    main.o(i.StartUp) refers to memcpya.o(.text) for __aeabi_memcpy4
    main.o(i.StartUp) refers to rand.o(.text) for rand
    main.o(i.StartUp) refers to main.o(i.Draw_Circle) for Draw_Circle
    main.o(i.StartUp) refers to main.o(.constdata) for .constdata
    main.o(i.StartUp) refers to main.o(.bss) for disp
    main.o(i.clearBubble) refers to memseta.o(.text) for __aeabi_memclr4
    main.o(i.clearBubble) refers to glcd_spi_lpc1700.o(i.GLCD_Bitmap) for GLCD_Bitmap
    main.o(i.clearBubble) refers to main.o(.bss) for color
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelInitialize) for osKernelInitialize
    main.o(i.main) refers to rtx_thread.o(.text.osThreadNew) for osThreadNew
    main.o(i.main) refers to rtx_kernel.o(.text.osKernelStart) for osKernelStart
    main.o(i.main) refers to main.o(i.Button) for Button
    main.o(i.main) refers to main.o(i.Potentiometer) for Potentiometer
    main.o(i.main) refers to main.o(i.Monitor) for Monitor
    main.o(i.main) refers to main.o(i.Score) for Score
    retarget.o(i._ttywrch) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fgetc) refers to retarget.o(i.getkey) for getkey
    retarget.o(i.fgetc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.fputc) refers to retarget.o(i.sendchar) for sendchar
    retarget.o(i.getkey) refers to uart.o(i.UARTInit) for UARTInit
    retarget.o(i.getkey) refers to uart.o(i.UARTReceiveChar) for UARTReceiveChar
    retarget.o(i.getkey) refers to retarget.o(.data) for uart_init_called
    retarget.o(i.sendchar) refers to uart.o(i.UARTInit) for UARTInit
    retarget.o(i.sendchar) refers to uart.o(i.UARTSendChar) for UARTSendChar
    retarget.o(i.sendchar) refers to retarget.o(.data) for uart_init_called
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.cb) for os_idle_thread_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.thread.stack) for os_idle_thread_stack
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.cb) for os_timer_mq_cb
    rtx_lib.o(.constdata) refers to rtx_lib.o(.bss.os.msgqueue.mem) for os_timer_mq_data
    rtx_lib.o(.data) refers to irq_cm3.o(.constdata) for irqRtxLib
    rtx_lib.o(.data.os.thread.mpi) refers to rtx_lib.o(.bss.os.thread.cb) for os_thread_cb
    rtx_lib.o(.data.os.thread.mpi) refers to rtx_lib.o(.bss.os.thread.stack) for os_thread_def_stack
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os) for os_isr_queue
    rtx_lib.o(.rodata) refers to rtx_lib.o(.bss.os.thread.stack) for os_thread_stack
    rtx_lib.o(.rodata) refers to rtx_lib.o(.data.os.thread.mpi) for os_mpi_def_stack
    rtx_lib.o(.rodata) refers to rtx_lib.o(.constdata) for os_idle_thread_attr
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(STACK) for __initial_sp
    startup_lpc17xx.o(RESET) refers to startup_lpc17xx.o(.text) for Reset_Handler
    startup_lpc17xx.o(RESET) refers to irq_cm3.o(.text) for SVC_Handler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART0_IRQHandler) for UART0_IRQHandler
    startup_lpc17xx.o(RESET) refers to uart.o(i.UART1_IRQHandler) for UART1_IRQHandler
    startup_lpc17xx.o(.text) refers to system_lpc17xx.o(i.SystemInit) for SystemInit
    startup_lpc17xx.o(.text) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to uldiv.o(.text) for __aeabi_uldivmod
    system_lpc17xx.o(i.SystemCoreClockUpdate) refers to system_lpc17xx.o(.data) for SystemCoreClock
    rtx_kernel.o(.text.osKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for svcRtxKernelInitialize
    rtx_kernel.o(.ARM.exidx.text.osKernelInitialize) refers to rtx_kernel.o(.text.osKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for svcRtxKernelGetInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo) refers to rtx_kernel.o(.text.osKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_kernel.o(.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo) refers to rtx_kernel.o(.text.svcRtxKernelGetInfo) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for svcRtxKernelGetState
    rtx_kernel.o(.text.osKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.osKernelGetState) refers to rtx_kernel.o(.text.osKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetState) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState) refers to rtx_kernel.o(.text.svcRtxKernelGetState) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for svcRtxKernelStart
    rtx_kernel.o(.ARM.exidx.text.osKernelStart) refers to rtx_kernel.o(.text.osKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for svcRtxKernelLock
    rtx_kernel.o(.ARM.exidx.text.osKernelLock) refers to rtx_kernel.o(.text.osKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for svcRtxKernelUnlock
    rtx_kernel.o(.ARM.exidx.text.osKernelUnlock) refers to rtx_kernel.o(.text.osKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for svcRtxKernelRestoreLock
    rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock) refers to rtx_kernel.o(.text.osKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for svcRtxKernelSuspend
    rtx_kernel.o(.ARM.exidx.text.osKernelSuspend) refers to rtx_kernel.o(.text.osKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for svcRtxKernelResume
    rtx_kernel.o(.ARM.exidx.text.osKernelResume) refers to rtx_kernel.o(.text.osKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for svcRtxKernelGetTickCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount) refers to rtx_kernel.o(.text.osKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount) refers to rtx_kernel.o(.text.svcRtxKernelGetTickCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for svcRtxKernelGetTickFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq) refers to rtx_kernel.o(.text.osKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetTickFreq) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetTickFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for svcRtxKernelGetSysTimerCount
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount) refers to rtx_kernel.o(.text.osKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetCount) for OS_Tick_GetCount
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetOverflow) for OS_Tick_GetOverflow
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to os_systick.o(.text.OS_Tick_GetInterval) for OS_Tick_GetInterval
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount) for [Anonymous Symbol]
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for svcRtxKernelGetSysTimerFreq
    rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.osKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) refers to os_systick.o(.text.OS_Tick_GetClock) for OS_Tick_GetClock
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq) refers to rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_memory.o(.text.osRtxMemoryInit) for osRtxMemoryInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelInitialize) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize) refers to rtx_kernel.o(.text.svcRtxKernelInitialize) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadStartup) for osRtxThreadStartup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Setup) for OS_Tick_Setup
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_GetIRQn) for OS_Tick_GetIRQn
    rtx_kernel.o(.text.svcRtxKernelStart) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.text.svcRtxKernelStart) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_kernel.o(.text.svcRtxKernelStart) refers to irq_cm3.o(.text) for SysTick_Handler
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart) refers to rtx_kernel.o(.text.svcRtxKernelStart) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock) refers to rtx_kernel.o(.text.svcRtxKernelLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock) refers to rtx_kernel.o(.text.svcRtxKernelUnlock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock) refers to rtx_kernel.o(.text.svcRtxKernelRestoreLock) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to os_systick.o(.text.OS_Tick_Disable) for OS_Tick_Disable
    rtx_kernel.o(.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend) refers to rtx_kernel.o(.text.svcRtxKernelSuspend) for [Anonymous Symbol]
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_kernel.o(.text.svcRtxKernelResume) refers to os_systick.o(.text.OS_Tick_Enable) for OS_Tick_Enable
    rtx_kernel.o(.text.svcRtxKernelResume) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume) refers to rtx_kernel.o(.text.svcRtxKernelResume) for [Anonymous Symbol]
    rtx_kernel.o(.data.os) refers to rtx_kernel.o(.rodata.str1.4) for .L.str
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort) refers to rtx_thread.o(.text.osRtxThreadListSort) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove) refers to rtx_thread.o(.text.osRtxThreadListRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_thread.o(.text.osRtxThreadReadyPut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDelayTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for osRtxThreadStackCheck
    rtx_thread.o(.text.osRtxThreadSwitch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_thread.o(.text.osRtxThreadStackCheck) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck) refers to rtx_thread.o(.text.osRtxThreadStackCheck) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadBlock) for osRtxThreadBlock
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadDispatch) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch) refers to rtx_thread.o(.text.osRtxThreadDispatch) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadBlock) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock) refers to rtx_thread.o(.text.osRtxThreadBlock) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.osRtxThreadWaitEnter) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadDelayInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_config.o(i.osRtxIdleThread) for osRtxIdleThread
    rtx_thread.o(.text.osRtxThreadStartup) refers to rtx_timer.o(.text.osRtxTimerThread) for osRtxTimerThread
    rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup) refers to rtx_thread.o(.text.osRtxThreadStartup) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.svcRtxThreadNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osThreadExit) for osThreadExit
    rtx_thread.o(.text.svcRtxThreadNew) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for osRtxThreadPostProcess
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadNew) refers to rtx_thread.o(.text.svcRtxThreadNew) for svcRtxThreadNew
    rtx_thread.o(.ARM.exidx.text.osThreadNew) refers to rtx_thread.o(.text.osThreadNew) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for svcRtxThreadGetName
    rtx_thread.o(.ARM.exidx.text.osThreadGetName) refers to rtx_thread.o(.text.osThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for svcRtxThreadGetId
    rtx_thread.o(.ARM.exidx.text.osThreadGetId) refers to rtx_thread.o(.text.osThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for svcRtxThreadGetState
    rtx_thread.o(.ARM.exidx.text.osThreadGetState) refers to rtx_thread.o(.text.osThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for svcRtxThreadGetStackSize
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize) refers to rtx_thread.o(.text.osThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for svcRtxThreadGetStackSpace
    rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace) refers to rtx_thread.o(.text.osThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for svcRtxThreadSetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadSetPriority) refers to rtx_thread.o(.text.osThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for svcRtxThreadGetPriority
    rtx_thread.o(.ARM.exidx.text.osThreadGetPriority) refers to rtx_thread.o(.text.osThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for svcRtxThreadYield
    rtx_thread.o(.ARM.exidx.text.osThreadYield) refers to rtx_thread.o(.text.osThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for svcRtxThreadSuspend
    rtx_thread.o(.ARM.exidx.text.osThreadSuspend) refers to rtx_thread.o(.text.osThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for svcRtxThreadResume
    rtx_thread.o(.ARM.exidx.text.osThreadResume) refers to rtx_thread.o(.text.osThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for svcRtxThreadDetach
    rtx_thread.o(.ARM.exidx.text.osThreadDetach) refers to rtx_thread.o(.text.osThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for svcRtxThreadJoin
    rtx_thread.o(.ARM.exidx.text.osThreadJoin) refers to rtx_thread.o(.text.osThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for svcRtxThreadExit
    rtx_thread.o(.ARM.exidx.text.osThreadExit) refers to rtx_thread.o(.text.osThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for svcRtxThreadTerminate
    rtx_thread.o(.ARM.exidx.text.osThreadTerminate) refers to rtx_thread.o(.text.osThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for svcRtxThreadGetCount
    rtx_thread.o(.ARM.exidx.text.osThreadGetCount) refers to rtx_thread.o(.text.osThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for svcRtxThreadEnumerate
    rtx_thread.o(.ARM.exidx.text.osThreadEnumerate) refers to rtx_thread.o(.text.osThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_thread.o(.text.osThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for svcRtxThreadFlagsSet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet) refers to rtx_thread.o(.text.osThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for svcRtxThreadFlagsClear
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear) refers to rtx_thread.o(.text.osThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for svcRtxThreadFlagsGet
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet) refers to rtx_thread.o(.text.osThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.osThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for svcRtxThreadFlagsWait
    rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait) refers to rtx_thread.o(.text.osThreadFlagsWait) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess) refers to rtx_thread.o(.text.osRtxThreadPostProcess) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck) refers to rtx_thread.o(.text.ThreadFlagsCheck) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName) refers to rtx_thread.o(.text.svcRtxThreadGetName) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetId) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId) refers to rtx_thread.o(.text.svcRtxThreadGetId) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState) refers to rtx_thread.o(.text.svcRtxThreadGetState) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize) refers to rtx_thread.o(.text.svcRtxThreadGetStackSize) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetStackSpace) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace) refers to rtx_thread.o(.text.svcRtxThreadGetStackSpace) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_thread.o(.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority) refers to rtx_thread.o(.text.svcRtxThreadSetPriority) for [Anonymous Symbol]
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority) refers to rtx_thread.o(.text.svcRtxThreadGetPriority) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadYield) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield) refers to rtx_thread.o(.text.svcRtxThreadYield) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.osRtxThreadDelayInsert) for osRtxThreadDelayInsert
    rtx_thread.o(.text.svcRtxThreadSuspend) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend) refers to rtx_thread.o(.text.svcRtxThreadSuspend) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadResume) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume) refers to rtx_thread.o(.text.svcRtxThreadResume) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach) refers to rtx_thread.o(.text.svcRtxThreadDetach) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadListUnlink) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for [Anonymous Symbol]
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_thread.o(.text.osRtxThreadFree) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.osRtxThreadFree) refers to rtx_thread.o(.text.osRtxThreadFree) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadListUnlink) for osRtxThreadListUnlink
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadJoin) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin) refers to rtx_thread.o(.text.svcRtxThreadJoin) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadExit) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit) refers to rtx_thread.o(.text.svcRtxThreadExit) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDelayRemove) for osRtxThreadDelayRemove
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for osRtxMutexOwnerRelease
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.osRtxThreadFree) for osRtxThreadFree
    rtx_thread.o(.text.svcRtxThreadTerminate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate) refers to rtx_thread.o(.text.svcRtxThreadTerminate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadGetCount) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount) refers to rtx_thread.o(.text.svcRtxThreadGetCount) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadEnumerate) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate) refers to rtx_thread.o(.text.svcRtxThreadEnumerate) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet) refers to rtx_thread.o(.text.svcRtxThreadFlagsSet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsClear) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear) refers to rtx_thread.o(.text.svcRtxThreadFlagsClear) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet) refers to rtx_thread.o(.text.svcRtxThreadFlagsGet) for [Anonymous Symbol]
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.ThreadFlagsCheck) for ThreadFlagsCheck
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_thread.o(.text.svcRtxThreadFlagsWait) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait) refers to rtx_thread.o(.text.svcRtxThreadFlagsWait) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelay) refers to rtx_delay.o(.text.svcRtxDelay) for svcRtxDelay
    rtx_delay.o(.ARM.exidx.text.osDelay) refers to rtx_delay.o(.text.osDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.osDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for svcRtxDelayUntil
    rtx_delay.o(.ARM.exidx.text.osDelayUntil) refers to rtx_delay.o(.text.osDelayUntil) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelay) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.ARM.exidx.text.svcRtxDelay) refers to rtx_delay.o(.text.svcRtxDelay) for [Anonymous Symbol]
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_delay.o(.text.svcRtxDelayUntil) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil) refers to rtx_delay.o(.text.svcRtxDelayUntil) for [Anonymous Symbol]
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.osRtxMutexOwnerRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease) refers to rtx_mutex.o(.text.osRtxMutexOwnerRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for svcRtxMutexNew
    rtx_mutex.o(.ARM.exidx.text.osMutexNew) refers to rtx_mutex.o(.text.osMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for svcRtxMutexGetName
    rtx_mutex.o(.ARM.exidx.text.osMutexGetName) refers to rtx_mutex.o(.text.osMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for svcRtxMutexAcquire
    rtx_mutex.o(.ARM.exidx.text.osMutexAcquire) refers to rtx_mutex.o(.text.osMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for svcRtxMutexRelease
    rtx_mutex.o(.ARM.exidx.text.osMutexRelease) refers to rtx_mutex.o(.text.osMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for svcRtxMutexGetOwner
    rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner) refers to rtx_mutex.o(.text.osMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.osMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for svcRtxMutexDelete
    rtx_mutex.o(.ARM.exidx.text.osMutexDelete) refers to rtx_mutex.o(.text.osMutexDelete) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mutex.o(.text.svcRtxMutexNew) refers to memseta.o(.text) for __aeabi_memclr4
    rtx_mutex.o(.text.svcRtxMutexNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew) refers to rtx_mutex.o(.text.svcRtxMutexNew) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName) refers to rtx_mutex.o(.text.svcRtxMutexGetName) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mutex.o(.text.svcRtxMutexAcquire) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire) refers to rtx_mutex.o(.text.svcRtxMutexAcquire) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexRelease) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease) refers to rtx_mutex.o(.text.svcRtxMutexRelease) for [Anonymous Symbol]
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner) refers to rtx_mutex.o(.text.svcRtxMutexGetOwner) for [Anonymous Symbol]
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListSort) for osRtxThreadListSort
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mutex.o(.text.svcRtxMutexDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete) refers to rtx_mutex.o(.text.svcRtxMutexDelete) for [Anonymous Symbol]
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxPendSV_Handler) for osRtxPendSV_Handler
    irq_cm3.o(.text) refers to rtx_system.o(.text.osRtxTick_Handler) for osRtxTick_Handler
    irq_cm3.o(.text) refers to rtx_kernel.o(.data.os) for osRtxInfo
    irq_cm3.o(.text) refers to rtx_lib.o(.constdata) for osRtxUserSVC
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for osMessageQueueNew
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for osMessageQueueGet
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_lib.o(.rodata) for osRtxConfig
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerTick) for osRtxTimerTick
    rtx_timer.o(.ARM.exidx.text.osRtxTimerThread) refers to rtx_timer.o(.text.osRtxTimerThread) for [Anonymous Symbol]
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for osMessageQueuePut
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.osRtxTimerTick) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.osRtxTimerTick) refers to rtx_timer.o(.text.osRtxTimerTick) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for svcRtxTimerNew
    rtx_timer.o(.ARM.exidx.text.osTimerNew) refers to rtx_timer.o(.text.osTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for svcRtxTimerGetName
    rtx_timer.o(.ARM.exidx.text.osTimerGetName) refers to rtx_timer.o(.text.osTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for svcRtxTimerStart
    rtx_timer.o(.ARM.exidx.text.osTimerStart) refers to rtx_timer.o(.text.osTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for svcRtxTimerStop
    rtx_timer.o(.ARM.exidx.text.osTimerStop) refers to rtx_timer.o(.text.osTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for svcRtxTimerIsRunning
    rtx_timer.o(.ARM.exidx.text.osTimerIsRunning) refers to rtx_timer.o(.text.osTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.osTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for svcRtxTimerDelete
    rtx_timer.o(.ARM.exidx.text.osTimerDelete) refers to rtx_timer.o(.text.osTimerDelete) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerInsert) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerInsert) refers to rtx_timer.o(.text.TimerInsert) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_timer.o(.text.svcRtxTimerNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew) refers to rtx_timer.o(.text.svcRtxTimerNew) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName) refers to rtx_timer.o(.text.svcRtxTimerGetName) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_timer.o(.text.TimerInsert) for TimerInsert
    rtx_timer.o(.text.svcRtxTimerStart) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart) refers to rtx_timer.o(.text.svcRtxTimerStart) for [Anonymous Symbol]
    rtx_timer.o(.text.TimerRemove) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.TimerRemove) refers to rtx_timer.o(.text.TimerRemove) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerStop) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop) refers to rtx_timer.o(.text.svcRtxTimerStop) for [Anonymous Symbol]
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning) refers to rtx_timer.o(.text.svcRtxTimerIsRunning) for [Anonymous Symbol]
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.TimerRemove) for TimerRemove
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_timer.o(.text.svcRtxTimerDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete) refers to rtx_timer.o(.text.svcRtxTimerDelete) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit) refers to rtx_memory.o(.text.osRtxMemoryInit) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for [Anonymous Symbol]
    rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree) refers to rtx_memory.o(.text.osRtxMemoryFree) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for svcRtxMemoryPoolNew
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew) refers to rtx_mempool.o(.text.osMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for svcRtxMemoryPoolGetName
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName) refers to rtx_mempool.o(.text.osMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for svcRtxMemoryPoolAlloc
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc) refers to rtx_mempool.o(.text.osMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_mempool.o(.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for svcRtxMemoryPoolFree
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree) refers to rtx_mempool.o(.text.osMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for svcRtxMemoryPoolGetCapacity
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.osMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for svcRtxMemoryPoolGetBlockSize
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.osMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for svcRtxMemoryPoolGetCount
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount) refers to rtx_mempool.o(.text.osMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetCount) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for svcRtxMemoryPoolGetSpace
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace) refers to rtx_mempool.o(.text.osMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace) for [Anonymous Symbol]
    rtx_mempool.o(.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for svcRtxMemoryPoolDelete
    rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete) refers to rtx_mempool.o(.text.osMemoryPoolDelete) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for osRtxMemoryPoolPostProcess
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew) refers to rtx_mempool.o(.text.svcRtxMemoryPoolNew) for [Anonymous Symbol]
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolPostProcess) for [Anonymous Symbol]
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName) refers to rtx_mempool.o(.text.svcRtxMemoryPoolGetName) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc) refers to rtx_mempool.o(.text.svcRtxMemoryPoolAlloc) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolFree) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree) refers to rtx_mempool.o(.text.svcRtxMemoryPoolFree) for [Anonymous Symbol]
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_mempool.o(.text.svcRtxMemoryPoolDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete) refers to rtx_mempool.o(.text.svcRtxMemoryPoolDelete) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxTick_Handler) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for OS_Tick_AcknowledgeIRQ
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDelayTick) for osRtxThreadDelayTick
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadListRemove) for osRtxThreadListRemove
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadReadyPut) for osRtxThreadReadyPut
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_thread.o(.text.osRtxThreadSwitch) for osRtxThreadSwitch
    rtx_system.o(.text.osRtxTick_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxTick_Handler) refers to rtx_system.o(.text.osRtxTick_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_system.o(.text.osRtxPendSV_Handler) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler) refers to rtx_system.o(.text.osRtxPendSV_Handler) for [Anonymous Symbol]
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_config.o(i.osRtxErrorNotify) for osRtxErrorNotify
    rtx_system.o(.text.osRtxPostProcess) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_system.o(.ARM.exidx.text.osRtxPostProcess) refers to rtx_system.o(.text.osRtxPostProcess) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Setup) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.text.OS_Tick_Setup) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Setup) refers to os_systick.o(.text.OS_Tick_Setup) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Enable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Enable) refers to os_systick.o(.text.OS_Tick_Enable) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_Disable) refers to os_systick.o(.bss.PendST) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_Disable) refers to os_systick.o(.text.OS_Tick_Disable) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ) refers to os_systick.o(.text.OS_Tick_AcknowledgeIRQ) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn) refers to os_systick.o(.text.OS_Tick_GetIRQn) for [Anonymous Symbol]
    os_systick.o(.text.OS_Tick_GetClock) refers to system_lpc17xx.o(.data) for SystemCoreClock
    os_systick.o(.ARM.exidx.text.OS_Tick_GetClock) refers to os_systick.o(.text.OS_Tick_GetClock) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval) refers to os_systick.o(.text.OS_Tick_GetInterval) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetCount) refers to os_systick.o(.text.OS_Tick_GetCount) for [Anonymous Symbol]
    os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow) refers to os_systick.o(.text.OS_Tick_GetOverflow) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for svcRtxMessageQueueNew
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew) refers to rtx_msgqueue.o(.text.osMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for svcRtxMessageQueueGetName
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName) refers to rtx_msgqueue.o(.text.osMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for svcRtxMessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut) refers to rtx_msgqueue.o(.text.osMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_system.o(.text.osRtxPostProcess) for osRtxPostProcess
    rtx_msgqueue.o(.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for svcRtxMessageQueueGet
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet) refers to rtx_msgqueue.o(.text.osMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for svcRtxMessageQueueGetCapacity
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.osMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for svcRtxMessageQueueGetMsgSize
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.osMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for svcRtxMessageQueueGetCount
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount) refers to rtx_msgqueue.o(.text.osMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for svcRtxMessageQueueGetSpace
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.osMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for svcRtxMessageQueueReset
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset) refers to rtx_msgqueue.o(.text.osMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for svcRtxMessageQueueDelete
    rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete) refers to rtx_msgqueue.o(.text.osMessageQueueDelete) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryAlloc) for osRtxMemoryAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to memseta.o(.text) for __aeabi_memclr
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_mempool.o(.text.osRtxMemoryPoolInit) for osRtxMemoryPoolInit
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for osRtxMessageQueuePostProcess
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueNew) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess) refers to rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGetName) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueuePut) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut) refers to rtx_msgqueue.o(.text.svcRtxMessageQueuePut) for [Anonymous Symbol]
    rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadWaitEnter) for osRtxThreadWaitEnter
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_thread.o(.text.osRtxThreadListPut) for osRtxThreadListPut
    rtx_msgqueue.o(.text.svcRtxMessageQueueGet) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueGet) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueRemove) for MessageQueueRemove
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueueGet) for MessageQueueGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_mempool.o(.text.osRtxMemoryPoolAlloc) for osRtxMemoryPoolAlloc
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadRegPtr) for osRtxThreadRegPtr
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to memcpya.o(.text) for __aeabi_memcpy
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.MessageQueuePut) for MessageQueuePut
    rtx_msgqueue.o(.text.svcRtxMessageQueueReset) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueReset) for [Anonymous Symbol]
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadListGet) for osRtxThreadListGet
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadWaitExit) for osRtxThreadWaitExit
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_thread.o(.text.osRtxThreadDispatch) for osRtxThreadDispatch
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_memory.o(.text.osRtxMemoryFree) for osRtxMemoryFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_mempool.o(.text.osRtxMemoryPoolFree) for osRtxMemoryPoolFree
    rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) refers to rtx_kernel.o(.data.os) for osRtxInfo
    rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete) refers to rtx_msgqueue.o(.text.svcRtxMessageQueueDelete) for [Anonymous Symbol]
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry10a.o(.ARM.Collect$$$$0000000D) for __rt_final_cpp
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry11a.o(.ARM.Collect$$$$0000000F) for __rt_final_exit
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry7b.o(.ARM.Collect$$$$00000008) for _main_clock
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry8b.o(.ARM.Collect$$$$0000000A) for _main_cpp_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry9a.o(.ARM.Collect$$$$0000000B) for _main_init
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry5.o(.ARM.Collect$$$$00000004) for _main_scatterload
    entry.o(.ARM.Collect$$$$00000000) refers (Special) to entry2.o(.ARM.Collect$$$$00000001) for _main_stk
    uldiv.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    uldiv.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    rand.o(.text) refers to rand.o(.data) for .data
    dmul.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dmul.o(.text) refers to depilogue.o(.text) for _double_epilogue
    ddiv.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    ddiv.o(.text) refers to depilogue.o(.text) for _double_round
    dfltui.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfltui.o(.text) refers to depilogue.o(.text) for _double_epilogue
    dfixi.o(.text) refers (Special) to iusefp.o(.text) for __I$use$fp
    dfixi.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    entry2.o(.ARM.Collect$$$$00000001) refers to entry2.o(.ARM.Collect$$$$00002712) for __lit__00000000
    entry2.o(.ARM.Collect$$$$00002712) refers to startup_lpc17xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to startup_lpc17xx.o(STACK) for __initial_sp
    entry2.o(__vectab_stack_and_reset_area) refers to entry.o(.ARM.Collect$$$$00000000) for __main
    entry5.o(.ARM.Collect$$$$00000004) refers to init.o(.text) for __scatterload
    entry9a.o(.ARM.Collect$$$$0000000B) refers to main.o(i.main) for main
    entry9b.o(.ARM.Collect$$$$0000000C) refers to main.o(i.main) for main
    depilogue.o(.text) refers to llshl.o(.text) for __aeabi_llsl
    depilogue.o(.text) refers to llushr.o(.text) for __aeabi_llsr
    init.o(.text) refers to entry5.o(.ARM.Collect$$$$00000004) for __main_after_scatterload


==============================================================================

Removing Unused input sections from the image.

    Removing glcd_scroll.o(.rev16_text), (4 bytes).
    Removing glcd_scroll.o(.revsh_text), (4 bytes).
    Removing glcd_scroll.o(.rrx_text), (6 bytes).
    Removing glcd_scroll.o(i.append_char), (240 bytes).
    Removing glcd_scroll.o(i.initJoyStick), (108 bytes).
    Removing glcd_scroll.o(i.init_scroll), (72 bytes).
    Removing glcd_scroll.o(i.joyStickBusyWaitingMonitor), (96 bytes).
    Removing glcd_scroll.o(i.last_line), (32 bytes).
    Removing glcd_scroll.o(i.last_window_line), (32 bytes).
    Removing glcd_scroll.o(i.moveDown), (68 bytes).
    Removing glcd_scroll.o(i.moveFirst), (60 bytes).
    Removing glcd_scroll.o(i.moveLast), (96 bytes).
    Removing glcd_scroll.o(i.moveUp), (72 bytes).
    Removing glcd_scroll.o(i.print_string), (34 bytes).
    Removing glcd_scroll.o(i.print_text), (24 bytes).
    Removing glcd_scroll.o(i.refresh_lcd), (80 bytes).
    Removing glcd_scroll.o(.bss), (525 bytes).
    Removing glcd_scroll.o(.data), (20 bytes).
    Removing glcd_spi_lpc1700.o(.rev16_text), (4 bytes).
    Removing glcd_spi_lpc1700.o(.revsh_text), (4 bytes).
    Removing glcd_spi_lpc1700.o(.rrx_text), (6 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_Bargraph), (104 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_ClearLn), (94 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_PutPixel), (128 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_ScrollVertical), (2 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_WrCmd), (12 bytes).
    Removing glcd_spi_lpc1700.o(i.GLCD_WrReg), (16 bytes).
    Removing uart.o(.rev16_text), (4 bytes).
    Removing uart.o(.revsh_text), (4 bytes).
    Removing uart.o(.rrx_text), (6 bytes).
    Removing uart.o(i.Free), (6 bytes).
    Removing uart.o(i.FreeRcv), (36 bytes).
    Removing uart.o(i.FreeSnd), (36 bytes).
    Removing uart.o(i.Lock), (28 bytes).
    Removing uart.o(i.LockRcv), (36 bytes).
    Removing uart.o(i.LockSnd), (36 bytes).
    Removing uart.o(i.UARTInit), (188 bytes).
    Removing uart.o(i.UARTReceiveChar), (36 bytes).
    Removing uart.o(i.UARTRecieve), (160 bytes).
    Removing uart.o(i.UARTSend), (132 bytes).
    Removing uart.o(i.UARTSendChar), (36 bytes).
    Removing uart.o(i.__NVIC_EnableIRQ), (26 bytes).
    Removing uart.o(i.getFrequency), (72 bytes).
    Removing main.o(.rev16_text), (4 bytes).
    Removing main.o(.revsh_text), (4 bytes).
    Removing main.o(.rrx_text), (6 bytes).
    Removing retarget.o(i._sys_exit), (4 bytes).
    Removing retarget.o(i._ttywrch), (12 bytes).
    Removing retarget.o(i.ferror), (8 bytes).
    Removing retarget.o(i.fgetc), (20 bytes).
    Removing retarget.o(i.fputc), (14 bytes).
    Removing retarget.o(i.getkey), (36 bytes).
    Removing retarget.o(i.sendchar), (68 bytes).
    Removing retarget.o(.data), (12 bytes).
    Removing rtx_lib.o(.rev16_text), (4 bytes).
    Removing rtx_lib.o(.revsh_text), (4 bytes).
    Removing rtx_lib.o(.rrx_text), (6 bytes).
    Removing rtx_lib.o(.emb_text), (0 bytes).
    Removing rtx_lib.o(.rodata), (56 bytes).
    Removing rtx_lib.o(.data), (4 bytes).
    Removing rtx_config.o(.rev16_text), (4 bytes).
    Removing rtx_config.o(.revsh_text), (4 bytes).
    Removing rtx_config.o(.rrx_text), (6 bytes).
    Removing startup_lpc17xx.o(HEAP), (8192 bytes).
    Removing system_lpc17xx.o(.rev16_text), (4 bytes).
    Removing system_lpc17xx.o(.revsh_text), (4 bytes).
    Removing system_lpc17xx.o(.rrx_text), (6 bytes).
    Removing system_lpc17xx.o(i.SystemCoreClockUpdate), (424 bytes).
    Removing rtx_kernel.o(.text), (0 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetInfo), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetInfo), (48 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetInfo), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetState), (52 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetState), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetState), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelUnlock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelRestoreLock), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelSuspend), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelResume), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelResume), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickCount), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetTickFreq), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetTickFreq), (12 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetTickFreq), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerCount), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerCount), (40 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerCount), (8 bytes).
    Removing rtx_kernel.o(.text.osKernelGetSysTimerFreq), (36 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.osKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelGetSysTimerFreq), (4 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelGetSysTimerFreq), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelInitialize), (8 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelStart), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelLock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelUnlock), (32 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelUnlock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelRestoreLock), (44 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelRestoreLock), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelSuspend), (84 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelSuspend), (8 bytes).
    Removing rtx_kernel.o(.text.svcRtxKernelResume), (156 bytes).
    Removing rtx_kernel.o(.ARM.exidx.text.svcRtxKernelResume), (8 bytes).
    Removing rtx_thread.o(.text), (0 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListGet), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListSort), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadReadyPut), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayTick), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadRegPtr), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadSwitch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStackCheck), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDispatch), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadBlock), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitExit), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayRemove), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadWaitEnter), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadDelayInsert), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadStartup), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadNew), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadNew), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetName), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetId), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetState), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSize), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetStackSpace), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetPriority), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.osThreadSuspend), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.osThreadResume), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.osThreadDetach), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osThreadJoin), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.osThreadTerminate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadGetCount), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.osThreadEnumerate), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsSet), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsClear), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsGet), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.osThreadFlagsWait), (36 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osThreadFlagsWait), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadPostProcess), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.ThreadFlagsCheck), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetName), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetName), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetId), (12 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetId), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetState), (22 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetState), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSize), (20 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSize), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetStackSpace), (68 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetStackSpace), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSetPriority), (80 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSetPriority), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetPriority), (30 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetPriority), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadYield), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadSuspend), (128 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadSuspend), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadResume), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadResume), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadDetach), (64 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadDetach), (8 bytes).
    Removing rtx_thread.o(.text.osRtxThreadListUnlink), (32 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadListUnlink), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.osRtxThreadFree), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadJoin), (92 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadJoin), (8 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadExit), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadTerminate), (188 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadTerminate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadGetCount), (56 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadGetCount), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadEnumerate), (104 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadEnumerate), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsSet), (108 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsSet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsClear), (72 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsClear), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsGet), (28 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsGet), (8 bytes).
    Removing rtx_thread.o(.text.svcRtxThreadFlagsWait), (76 bytes).
    Removing rtx_thread.o(.ARM.exidx.text.svcRtxThreadFlagsWait), (8 bytes).
    Removing rtx_delay.o(.text), (0 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelay), (8 bytes).
    Removing rtx_delay.o(.text.osDelayUntil), (36 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.osDelayUntil), (8 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelay), (8 bytes).
    Removing rtx_delay.o(.text.svcRtxDelayUntil), (40 bytes).
    Removing rtx_delay.o(.ARM.exidx.text.svcRtxDelayUntil), (8 bytes).
    Removing rtx_mutex.o(.text), (0 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osRtxMutexOwnerRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexNew), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetName), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexGetOwner), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.osMutexDelete), (36 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.osMutexDelete), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexNew), (108 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexNew), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetName), (20 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetName), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexAcquire), (8 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexRelease), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexGetOwner), (24 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexGetOwner), (8 bytes).
    Removing rtx_mutex.o(.text.svcRtxMutexDelete), (212 bytes).
    Removing rtx_mutex.o(.ARM.exidx.text.svcRtxMutexDelete), (8 bytes).
    Removing irq_cm3.o(.constdata), (1 bytes).
    Removing rtx_timer.o(.text), (0 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerThread), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osRtxTimerTick), (8 bytes).
    Removing rtx_timer.o(.text.osTimerNew), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.osTimerGetName), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStart), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.osTimerStop), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.osTimerIsRunning), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.osTimerDelete), (36 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.osTimerDelete), (8 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerInsert), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerNew), (124 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerNew), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerGetName), (20 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerGetName), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStart), (72 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStart), (8 bytes).
    Removing rtx_timer.o(.text.TimerRemove), (48 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.TimerRemove), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerStop), (40 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerStop), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerIsRunning), (24 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerIsRunning), (8 bytes).
    Removing rtx_timer.o(.text.svcRtxTimerDelete), (84 bytes).
    Removing rtx_timer.o(.ARM.exidx.text.svcRtxTimerDelete), (8 bytes).
    Removing rtx_memory.o(.text), (0 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryInit), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryAlloc), (8 bytes).
    Removing rtx_memory.o(.ARM.exidx.text.osRtxMemoryFree), (8 bytes).
    Removing rtx_mempool.o(.text), (0 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolInit), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolNew), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetName), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolAlloc), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolFree), (84 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCapacity), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCapacity), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCapacity), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetBlockSize), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetBlockSize), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetBlockSize), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetCount), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetCount), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetCount), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolGetSpace), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetSpace), (24 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetSpace), (8 bytes).
    Removing rtx_mempool.o(.text.osMemoryPoolDelete), (36 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osMemoryPoolDelete), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolNew), (284 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolNew), (8 bytes).
    Removing rtx_mempool.o(.text.osRtxMemoryPoolPostProcess), (44 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.osRtxMemoryPoolPostProcess), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolGetName), (20 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolGetName), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolAlloc), (60 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolAlloc), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolFree), (74 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolFree), (8 bytes).
    Removing rtx_mempool.o(.text.svcRtxMemoryPoolDelete), (120 bytes).
    Removing rtx_mempool.o(.ARM.exidx.text.svcRtxMemoryPoolDelete), (8 bytes).
    Removing rtx_system.o(.text), (0 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxTick_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPendSV_Handler), (8 bytes).
    Removing rtx_system.o(.ARM.exidx.text.osRtxPostProcess), (8 bytes).
    Removing os_systick.o(.text), (0 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Setup), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Enable), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_Disable), (48 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_Disable), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_AcknowledgeIRQ), (8 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetIRQn), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetClock), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetClock), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetInterval), (12 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetInterval), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetCount), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetCount), (8 bytes).
    Removing os_systick.o(.text.OS_Tick_GetOverflow), (16 bytes).
    Removing os_systick.o(.ARM.exidx.text.OS_Tick_GetOverflow), (8 bytes).
    Removing rtx_msgqueue.o(.text), (0 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetName), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCapacity), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCapacity), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCapacity), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetMsgSize), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetMsgSize), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetMsgSize), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetCount), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetCount), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetCount), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueGetSpace), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetSpace), (24 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetSpace), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueReset), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.osMessageQueueDelete), (36 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osMessageQueueDelete), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueNew), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.osRtxMessageQueuePostProcess), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueRemove), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueGetName), (20 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGetName), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueuePut), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.MessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueGet), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueReset), (186 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueReset), (8 bytes).
    Removing rtx_msgqueue.o(.text.svcRtxMessageQueueDelete), (124 bytes).
    Removing rtx_msgqueue.o(.ARM.exidx.text.svcRtxMessageQueueDelete), (8 bytes).

381 unused section(s) (total 19092 bytes) removed from the image.

==============================================================================

Image Symbol Table

    Local Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    RESET                                    0x00000000   Section      204  startup_lpc17xx.o(RESET)
    ../clib/../cmprslib/zerorunl2.c          0x00000000   Number         0  __dczerorl2.o ABSOLUTE
    ../clib/microlib/division.c              0x00000000   Number         0  uldiv.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry2.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry8a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry5.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry7a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry11a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry10a.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9b.o ABSOLUTE
    ../clib/microlib/init/entry.s            0x00000000   Number         0  entry9a.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llshl.o ABSOLUTE
    ../clib/microlib/longlong.c              0x00000000   Number         0  llushr.o ABSOLUTE
    ../clib/microlib/stdlib/rand.c           0x00000000   Number         0  rand.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpya.o ABSOLUTE
    ../clib/microlib/string/memcpy.c         0x00000000   Number         0  memcpyb.o ABSOLUTE
    ../clib/microlib/string/memset.c         0x00000000   Number         0  memseta.o ABSOLUTE
    ../clib/microlib/stubs.s                 0x00000000   Number         0  iusefp.o ABSOLUTE
    ../fplib/microlib/fpdiv.c                0x00000000   Number         0  ddiv.o ABSOLUTE
    ../fplib/microlib/fpepilogue.c           0x00000000   Number         0  depilogue.o ABSOLUTE
    ../fplib/microlib/fpfix.c                0x00000000   Number         0  dfixi.o ABSOLUTE
    ../fplib/microlib/fpflt.c                0x00000000   Number         0  dfltui.o ABSOLUTE
    ../fplib/microlib/fpmul.c                0x00000000   Number         0  dmul.o ABSOLUTE
    ..\..\..\Source\ARM\irq_cm3.s            0x00000000   Number         0  irq_cm3.o ABSOLUTE
    ..\Lab2\GLCD_SPI_LPC1700.c               0x00000000   Number         0  glcd_spi_lpc1700.o ABSOLUTE
    ..\Lab2\GLCD_Scroll.c                    0x00000000   Number         0  glcd_scroll.o ABSOLUTE
    ..\Lab2\uart.c                           0x00000000   Number         0  uart.o ABSOLUTE
    ..\Lab5\Retarget.c                       0x00000000   Number         0  retarget.o ABSOLUTE
    ..\Lab5\main.c                           0x00000000   Number         0  main.o ABSOLUTE
    ..\\Lab2\\GLCD_SPI_LPC1700.c             0x00000000   Number         0  glcd_spi_lpc1700.o ABSOLUTE
    ..\\Lab2\\GLCD_Scroll.c                  0x00000000   Number         0  glcd_scroll.o ABSOLUTE
    ..\\Lab2\\uart.c                         0x00000000   Number         0  uart.o ABSOLUTE
    ..\\Lab5\\main.c                         0x00000000   Number         0  main.o ABSOLUTE
    C:\Software\Keil_v5\ARM\PACK\ARM\CMSIS\5.3.0\CMSIS\RTOS2\RTX\Source\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    C:\\Software\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.3.0\\CMSIS\\RTOS2\\RTX\\Source\\rtx_lib.c 0x00000000   Number         0  rtx_lib.o ABSOLUTE
    RTE\CMSIS\RTX_Config.c                   0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\Device\LPC1768\startup_LPC17xx.s     0x00000000   Number         0  startup_lpc17xx.o ABSOLUTE
    RTE\Device\LPC1768\system_LPC17xx.c      0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    RTE\\CMSIS\\RTX_Config.c                 0x00000000   Number         0  rtx_config.o ABSOLUTE
    RTE\\Device\\LPC1768\\system_LPC17xx.c   0x00000000   Number         0  system_lpc17xx.o ABSOLUTE
    dc.s                                     0x00000000   Number         0  dc.o ABSOLUTE
    handlers.s                               0x00000000   Number         0  handlers.o ABSOLUTE
    init.s                                   0x00000000   Number         0  init.o ABSOLUTE
    os_systick.c                             0x00000000   Number         0  os_systick.o ABSOLUTE
    rtx_delay.c                              0x00000000   Number         0  rtx_delay.o ABSOLUTE
    rtx_kernel.c                             0x00000000   Number         0  rtx_kernel.o ABSOLUTE
    rtx_memory.c                             0x00000000   Number         0  rtx_memory.o ABSOLUTE
    rtx_mempool.c                            0x00000000   Number         0  rtx_mempool.o ABSOLUTE
    rtx_msgqueue.c                           0x00000000   Number         0  rtx_msgqueue.o ABSOLUTE
    rtx_mutex.c                              0x00000000   Number         0  rtx_mutex.o ABSOLUTE
    rtx_system.c                             0x00000000   Number         0  rtx_system.o ABSOLUTE
    rtx_thread.c                             0x00000000   Number         0  rtx_thread.o ABSOLUTE
    rtx_timer.c                              0x00000000   Number         0  rtx_timer.o ABSOLUTE
    .ARM.Collect$$$$00000000                 0x000000cc   Section        0  entry.o(.ARM.Collect$$$$00000000)
    .ARM.Collect$$$$00000001                 0x000000cc   Section        4  entry2.o(.ARM.Collect$$$$00000001)
    .ARM.Collect$$$$00000004                 0x000000d0   Section        4  entry5.o(.ARM.Collect$$$$00000004)
    .ARM.Collect$$$$00000008                 0x000000d4   Section        0  entry7b.o(.ARM.Collect$$$$00000008)
    .ARM.Collect$$$$0000000A                 0x000000d4   Section        0  entry8b.o(.ARM.Collect$$$$0000000A)
    .ARM.Collect$$$$0000000B                 0x000000d4   Section        8  entry9a.o(.ARM.Collect$$$$0000000B)
    .ARM.Collect$$$$0000000D                 0x000000dc   Section        0  entry10a.o(.ARM.Collect$$$$0000000D)
    .ARM.Collect$$$$0000000F                 0x000000dc   Section        0  entry11a.o(.ARM.Collect$$$$0000000F)
    .ARM.Collect$$$$00002712                 0x000000dc   Section        4  entry2.o(.ARM.Collect$$$$00002712)
    __lit__00000000                          0x000000dc   Data           4  entry2.o(.ARM.Collect$$$$00002712)
    .text                                    0x000000e0   Section       36  startup_lpc17xx.o(.text)
    .text                                    0x00000104   Section      148  irq_cm3.o(.text)
    .text                                    0x00000198   Section        0  rand.o(.text)
    .text                                    0x000001bc   Section        0  memcpya.o(.text)
    .text                                    0x000001e0   Section        0  memseta.o(.text)
    .text                                    0x00000204   Section        0  dmul.o(.text)
    [Anonymous Symbol]                       0x000002e8   Section        0  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    .text                                    0x000002e8   Section        0  iusefp.o(.text)
    __arm_cp.3_0                             0x000002f0   Number         4  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    [Anonymous Symbol]                       0x000002f4   Section        0  os_systick.o(.text.OS_Tick_GetIRQn)
    i.__scatterload_null                     0x000002fa   Section        2  handlers.o(i.__scatterload_null)
    .ARM.__at_0x02FC                         0x000002fc   Section        4  startup_lpc17xx.o(.ARM.__at_0x02FC)
    .text                                    0x00000300   Section        0  ddiv.o(.text)
    .text                                    0x000003de   Section        0  dfltui.o(.text)
    .text                                    0x000003f8   Section        0  dfixi.o(.text)
    .text                                    0x00000436   Section        0  llshl.o(.text)
    .text                                    0x00000454   Section        0  llushr.o(.text)
    .text                                    0x00000474   Section        0  depilogue.o(.text)
    .text                                    0x00000530   Section       36  init.o(.text)
    .text                                    0x00000554   Section        0  __dczerorl2.o(.text)
    [Anonymous Symbol]                       0x000005aa   Section        0  rtx_msgqueue.o(.text.MessageQueueGet)
    MessageQueueGet                          0x000005ab   Thumb Code    70  rtx_msgqueue.o(.text.MessageQueueGet)
    [Anonymous Symbol]                       0x000005f0   Section        0  rtx_msgqueue.o(.text.MessageQueuePut)
    MessageQueuePut                          0x000005f1   Thumb Code   100  rtx_msgqueue.o(.text.MessageQueuePut)
    [Anonymous Symbol]                       0x00000654   Section        0  rtx_msgqueue.o(.text.MessageQueueRemove)
    MessageQueueRemove                       0x00000655   Thumb Code    38  rtx_msgqueue.o(.text.MessageQueueRemove)
    [Anonymous Symbol]                       0x0000067c   Section        0  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_0                             0x0000069c   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_1                             0x000006a0   Number         4  os_systick.o(.text.OS_Tick_Enable)
    __arm_cp.1_2                             0x000006a4   Number         4  os_systick.o(.text.OS_Tick_Enable)
    [Anonymous Symbol]                       0x000006a8   Section        0  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_0                             0x000006d8   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_1                             0x000006dc   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_2                             0x000006e0   Number         4  os_systick.o(.text.OS_Tick_Setup)
    __arm_cp.0_3                             0x000006e4   Number         4  os_systick.o(.text.OS_Tick_Setup)
    [Anonymous Symbol]                       0x000006e8   Section        0  rtx_thread.o(.text.ThreadFlagsCheck)
    ThreadFlagsCheck                         0x000006e9   Thumb Code   106  rtx_thread.o(.text.ThreadFlagsCheck)
    [Anonymous Symbol]                       0x00000754   Section        0  rtx_timer.o(.text.TimerInsert)
    TimerInsert                              0x00000755   Thumb Code    80  rtx_timer.o(.text.TimerInsert)
    __arm_cp.8_0                             0x000007a0   Number         4  rtx_timer.o(.text.TimerInsert)
    [Anonymous Symbol]                       0x000007a4   Section        0  rtx_delay.o(.text.osDelay)
    __arm_cp.0_0                             0x000007c4   Number         4  rtx_delay.o(.text.osDelay)
    [Anonymous Symbol]                       0x000007c8   Section        0  rtx_kernel.o(.text.osKernelInitialize)
    __arm_cp.0_0                             0x000007e8   Number         4  rtx_kernel.o(.text.osKernelInitialize)
    [Anonymous Symbol]                       0x000007ec   Section        0  rtx_kernel.o(.text.osKernelStart)
    __arm_cp.5_0                             0x0000080c   Number         4  rtx_kernel.o(.text.osKernelStart)
    [Anonymous Symbol]                       0x00000810   Section        0  rtx_msgqueue.o(.text.osMessageQueueGet)
    __arm_cp.3_0                             0x0000087c   Number         4  rtx_msgqueue.o(.text.osMessageQueueGet)
    [Anonymous Symbol]                       0x00000880   Section        0  rtx_msgqueue.o(.text.osMessageQueueNew)
    __arm_cp.0_0                             0x000008a0   Number         4  rtx_msgqueue.o(.text.osMessageQueueNew)
    [Anonymous Symbol]                       0x000008a4   Section        0  rtx_msgqueue.o(.text.osMessageQueuePut)
    __arm_cp.2_0                             0x00000920   Number         4  rtx_msgqueue.o(.text.osMessageQueuePut)
    [Anonymous Symbol]                       0x00000924   Section        0  rtx_mutex.o(.text.osMutexAcquire)
    __arm_cp.3_0                             0x00000944   Number         4  rtx_mutex.o(.text.osMutexAcquire)
    [Anonymous Symbol]                       0x00000948   Section        0  rtx_mutex.o(.text.osMutexRelease)
    __arm_cp.4_0                             0x00000968   Number         4  rtx_mutex.o(.text.osMutexRelease)
    [Anonymous Symbol]                       0x0000096c   Section        0  rtx_memory.o(.text.osRtxMemoryAlloc)
    [Anonymous Symbol]                       0x000009ec   Section        0  rtx_memory.o(.text.osRtxMemoryFree)
    [Anonymous Symbol]                       0x00000a3e   Section        0  rtx_memory.o(.text.osRtxMemoryInit)
    [Anonymous Symbol]                       0x00000a74   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    [Anonymous Symbol]                       0x00000abe   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    [Anonymous Symbol]                       0x00000b14   Section        0  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    [Anonymous Symbol]                       0x00000b68   Section        0  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    osRtxMessageQueuePostProcess             0x00000b69   Thumb Code   214  rtx_msgqueue.o(.text.osRtxMessageQueuePostProcess)
    [Anonymous Symbol]                       0x00000c3e   Section        0  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    [Anonymous Symbol]                       0x00000c84   Section        0  rtx_system.o(.text.osRtxPendSV_Handler)
    __arm_cp.1_0                             0x00000d10   Number         4  rtx_system.o(.text.osRtxPendSV_Handler)
    [Anonymous Symbol]                       0x00000d14   Section        0  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_0                             0x00000d80   Number         4  rtx_system.o(.text.osRtxPostProcess)
    __arm_cp.2_1                             0x00000d84   Number         4  rtx_system.o(.text.osRtxPostProcess)
    [Anonymous Symbol]                       0x00000d88   Section        0  rtx_thread.o(.text.osRtxThreadBlock)
    osRtxThreadBlock                         0x00000d89   Thumb Code    56  rtx_thread.o(.text.osRtxThreadBlock)
    __arm_cp.10_0                            0x00000dbc   Number         4  rtx_thread.o(.text.osRtxThreadBlock)
    [Anonymous Symbol]                       0x00000dc0   Section        0  rtx_thread.o(.text.osRtxThreadDelayInsert)
    osRtxThreadDelayInsert                   0x00000dc1   Thumb Code   148  rtx_thread.o(.text.osRtxThreadDelayInsert)
    __arm_cp.14_0                            0x00000e50   Number         4  rtx_thread.o(.text.osRtxThreadDelayInsert)
    [Anonymous Symbol]                       0x00000e54   Section        0  rtx_thread.o(.text.osRtxThreadDelayRemove)
    osRtxThreadDelayRemove                   0x00000e55   Thumb Code    88  rtx_thread.o(.text.osRtxThreadDelayRemove)
    __arm_cp.12_0                            0x00000ea8   Number         4  rtx_thread.o(.text.osRtxThreadDelayRemove)
    [Anonymous Symbol]                       0x00000eac   Section        0  rtx_thread.o(.text.osRtxThreadDelayTick)
    __arm_cp.5_0                             0x00000ee0   Number         4  rtx_thread.o(.text.osRtxThreadDelayTick)
    [Anonymous Symbol]                       0x00000ee4   Section        0  rtx_thread.o(.text.osRtxThreadDispatch)
    __arm_cp.9_0                             0x00000f40   Number         4  rtx_thread.o(.text.osRtxThreadDispatch)
    [Anonymous Symbol]                       0x00000f44   Section        0  rtx_thread.o(.text.osRtxThreadFree)
    osRtxThreadFree                          0x00000f45   Thumb Code    88  rtx_thread.o(.text.osRtxThreadFree)
    __arm_cp.52_0                            0x00000f98   Number         4  rtx_thread.o(.text.osRtxThreadFree)
    [Anonymous Symbol]                       0x00000f9c   Section        0  rtx_thread.o(.text.osRtxThreadListGet)
    [Anonymous Symbol]                       0x00000fb2   Section        0  rtx_thread.o(.text.osRtxThreadListPut)
    [Anonymous Symbol]                       0x00000fea   Section        0  rtx_thread.o(.text.osRtxThreadListRemove)
    [Anonymous Symbol]                       0x00000ffe   Section        0  rtx_thread.o(.text.osRtxThreadListSort)
    [Anonymous Symbol]                       0x00001026   Section        0  rtx_thread.o(.text.osRtxThreadPostProcess)
    osRtxThreadPostProcess                   0x00001027   Thumb Code    42  rtx_thread.o(.text.osRtxThreadPostProcess)
    [Anonymous Symbol]                       0x00001050   Section        0  rtx_thread.o(.text.osRtxThreadReadyPut)
    __arm_cp.4_0                             0x00001060   Number         4  rtx_thread.o(.text.osRtxThreadReadyPut)
    [Anonymous Symbol]                       0x00001064   Section        0  rtx_thread.o(.text.osRtxThreadRegPtr)
    [Anonymous Symbol]                       0x0000106c   Section        0  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_0                             0x0000108c   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    __arm_cp.8_1                             0x00001090   Number         4  rtx_thread.o(.text.osRtxThreadStackCheck)
    [Anonymous Symbol]                       0x00001094   Section        0  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_0                            0x000010dc   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_1                            0x000010e0   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_2                            0x000010e4   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    __arm_cp.15_3                            0x000010e8   Number         4  rtx_thread.o(.text.osRtxThreadStartup)
    [Anonymous Symbol]                       0x000010ec   Section        0  rtx_thread.o(.text.osRtxThreadSwitch)
    __arm_cp.7_0                             0x000010f8   Number         4  rtx_thread.o(.text.osRtxThreadSwitch)
    [Anonymous Symbol]                       0x000010fc   Section        0  rtx_thread.o(.text.osRtxThreadWaitEnter)
    __arm_cp.13_0                            0x00001130   Number         4  rtx_thread.o(.text.osRtxThreadWaitEnter)
    [Anonymous Symbol]                       0x00001134   Section        0  rtx_thread.o(.text.osRtxThreadWaitExit)
    [Anonymous Symbol]                       0x00001158   Section        0  rtx_system.o(.text.osRtxTick_Handler)
    __arm_cp.0_0                             0x000011c4   Number         4  rtx_system.o(.text.osRtxTick_Handler)
    [Anonymous Symbol]                       0x000011c8   Section        0  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_0                             0x00001200   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_1                             0x00001204   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    __arm_cp.0_2                             0x00001208   Number         4  rtx_timer.o(.text.osRtxTimerThread)
    [Anonymous Symbol]                       0x0000120c   Section        0  rtx_timer.o(.text.osRtxTimerTick)
    osRtxTimerTick                           0x0000120d   Thumb Code    88  rtx_timer.o(.text.osRtxTimerTick)
    __arm_cp.1_0                             0x00001260   Number         4  rtx_timer.o(.text.osRtxTimerTick)
    [Anonymous Symbol]                       0x00001264   Section        0  rtx_thread.o(.text.osThreadExit)
    __arm_cp.30_0                            0x0000126c   Number         4  rtx_thread.o(.text.osThreadExit)
    [Anonymous Symbol]                       0x00001270   Section        0  rtx_thread.o(.text.osThreadNew)
    __arm_cp.17_0                            0x00001290   Number         4  rtx_thread.o(.text.osThreadNew)
    [Anonymous Symbol]                       0x00001294   Section        0  rtx_thread.o(.text.osThreadYield)
    __arm_cp.25_0                            0x000012b4   Number         4  rtx_thread.o(.text.osThreadYield)
    [Anonymous Symbol]                       0x000012b8   Section        0  rtx_delay.o(.text.svcRtxDelay)
    svcRtxDelay                              0x000012b9   Thumb Code    20  rtx_delay.o(.text.svcRtxDelay)
    [Anonymous Symbol]                       0x000012cc   Section        0  rtx_kernel.o(.text.svcRtxKernelInitialize)
    svcRtxKernelInitialize                   0x000012cd   Thumb Code   376  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_0                            0x00001438   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_1                            0x0000143c   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    __arm_cp.19_2                            0x00001440   Number         4  rtx_kernel.o(.text.svcRtxKernelInitialize)
    [Anonymous Symbol]                       0x00001444   Section        0  rtx_kernel.o(.text.svcRtxKernelStart)
    svcRtxKernelStart                        0x00001445   Thumb Code   140  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_0                            0x000014c0   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_1                            0x000014c4   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_2                            0x000014c8   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    __arm_cp.20_3                            0x000014cc   Number         4  rtx_kernel.o(.text.svcRtxKernelStart)
    [Anonymous Symbol]                       0x000014d0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    svcRtxMessageQueueGet                    0x000014d1   Thumb Code   240  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    __arm_cp.21_0                            0x000015bc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueGet)
    [Anonymous Symbol]                       0x000015c0   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    svcRtxMessageQueueNew                    0x000015c1   Thumb Code   312  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_0                            0x000016f0   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    __arm_cp.14_1                            0x000016f4   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueueNew)
    [Anonymous Symbol]                       0x000016f8   Section        0  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    svcRtxMessageQueuePut                    0x000016f9   Thumb Code   200  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    __arm_cp.19_0                            0x000017bc   Number         4  rtx_msgqueue.o(.text.svcRtxMessageQueuePut)
    [Anonymous Symbol]                       0x000017c0   Section        0  rtx_mutex.o(.text.svcRtxMutexAcquire)
    svcRtxMutexAcquire                       0x000017c1   Thumb Code   152  rtx_mutex.o(.text.svcRtxMutexAcquire)
    __arm_cp.9_0                             0x00001854   Number         4  rtx_mutex.o(.text.svcRtxMutexAcquire)
    [Anonymous Symbol]                       0x00001858   Section        0  rtx_mutex.o(.text.svcRtxMutexRelease)
    svcRtxMutexRelease                       0x00001859   Thumb Code   188  rtx_mutex.o(.text.svcRtxMutexRelease)
    __arm_cp.10_0                            0x00001910   Number         4  rtx_mutex.o(.text.svcRtxMutexRelease)
    [Anonymous Symbol]                       0x00001914   Section        0  rtx_thread.o(.text.svcRtxThreadExit)
    svcRtxThreadExit                         0x00001915   Thumb Code   104  rtx_thread.o(.text.svcRtxThreadExit)
    __arm_cp.54_0                            0x00001978   Number         4  rtx_thread.o(.text.svcRtxThreadExit)
    [Anonymous Symbol]                       0x0000197c   Section        0  rtx_thread.o(.text.svcRtxThreadNew)
    svcRtxThreadNew                          0x0000197d   Thumb Code   480  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_0                            0x00001b48   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_1                            0x00001b4c   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_2                            0x00001b50   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_3                            0x00001b54   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    __arm_cp.16_4                            0x00001b58   Number         4  rtx_thread.o(.text.svcRtxThreadNew)
    [Anonymous Symbol]                       0x00001b5c   Section        0  rtx_thread.o(.text.svcRtxThreadYield)
    svcRtxThreadYield                        0x00001b5d   Thumb Code    56  rtx_thread.o(.text.svcRtxThreadYield)
    __arm_cp.47_0                            0x00001b90   Number         4  rtx_thread.o(.text.svcRtxThreadYield)
    i.Button                                 0x00001b94   Section        0  main.o(i.Button)
    i.Clear_Arrow                            0x00001bd8   Section        0  main.o(i.Clear_Arrow)
    i.Draw_Arrow                             0x00001c00   Section        0  main.o(i.Draw_Arrow)
    i.Draw_Circle                            0x00001d34   Section        0  main.o(i.Draw_Circle)
    i.GLCD_Bitmap                            0x000020ac   Section        0  glcd_spi_lpc1700.o(i.GLCD_Bitmap)
    i.GLCD_Clear                             0x000020fe   Section        0  glcd_spi_lpc1700.o(i.GLCD_Clear)
    i.GLCD_DisplayChar                       0x00002128   Section        0  glcd_spi_lpc1700.o(i.GLCD_DisplayChar)
    i.GLCD_DisplayString                     0x00002184   Section        0  glcd_spi_lpc1700.o(i.GLCD_DisplayString)
    i.GLCD_DrawChar                          0x000021ac   Section        0  glcd_spi_lpc1700.o(i.GLCD_DrawChar)
    i.GLCD_Init                              0x00002248   Section        0  glcd_spi_lpc1700.o(i.GLCD_Init)
    i.GLCD_SetBackColor                      0x00002830   Section        0  glcd_spi_lpc1700.o(i.GLCD_SetBackColor)
    i.GLCD_SetTextColor                      0x0000283c   Section        0  glcd_spi_lpc1700.o(i.GLCD_SetTextColor)
    i.GLCD_SetWindow                         0x00002848   Section        0  glcd_spi_lpc1700.o(i.GLCD_SetWindow)
    i.GLCD_WindowMax                         0x000028f4   Section        0  glcd_spi_lpc1700.o(i.GLCD_WindowMax)
    i.Monitor                                0x00002908   Section        0  main.o(i.Monitor)
    i.Potentiometer                          0x00002bb8   Section        0  main.o(i.Potentiometer)
    i.Score                                  0x00002c70   Section        0  main.o(i.Score)
    i.StartUp                                0x00002dc4   Section        0  main.o(i.StartUp)
    i.SystemInit                             0x00002e34   Section        0  system_lpc17xx.o(i.SystemInit)
    i.UART0_IRQHandler                       0x00002f74   Section        0  uart.o(i.UART0_IRQHandler)
    i.UART1_IRQHandler                       0x00002fdc   Section        0  uart.o(i.UART1_IRQHandler)
    i.__scatterload_copy                     0x0000304c   Section       14  handlers.o(i.__scatterload_copy)
    i.__scatterload_zeroinit                 0x0000305a   Section       14  handlers.o(i.__scatterload_zeroinit)
    i.clearBubble                            0x00003068   Section        0  main.o(i.clearBubble)
    i.delay                                  0x000030c8   Section        0  glcd_spi_lpc1700.o(i.delay)
    delay                                    0x000030c9   Thumb Code    14  glcd_spi_lpc1700.o(i.delay)
    i.main                                   0x000030d8   Section        0  main.o(i.main)
    i.osRtxErrorNotify                       0x0000311c   Section        0  rtx_config.o(i.osRtxErrorNotify)
    i.osRtxIdleThread                        0x0000313c   Section        0  rtx_config.o(i.osRtxIdleThread)
    i.rd_id_man                              0x00003140   Section        0  glcd_spi_lpc1700.o(i.rd_id_man)
    rd_id_man                                0x00003141   Thumb Code   132  glcd_spi_lpc1700.o(i.rd_id_man)
    i.rd_reg                                 0x000031cc   Section        0  glcd_spi_lpc1700.o(i.rd_reg)
    rd_reg                                   0x000031cd   Thumb Code    66  glcd_spi_lpc1700.o(i.rd_reg)
    i.spi_tran                               0x00003214   Section        0  glcd_spi_lpc1700.o(i.spi_tran)
    spi_tran                                 0x00003215   Thumb Code    28  glcd_spi_lpc1700.o(i.spi_tran)
    i.spi_tran_man                           0x00003234   Section        0  glcd_spi_lpc1700.o(i.spi_tran_man)
    spi_tran_man                             0x00003235   Thumb Code   124  glcd_spi_lpc1700.o(i.spi_tran_man)
    i.wr_cmd                                 0x000032b4   Section        0  glcd_spi_lpc1700.o(i.wr_cmd)
    wr_cmd                                   0x000032b5   Thumb Code    36  glcd_spi_lpc1700.o(i.wr_cmd)
    i.wr_dat                                 0x000032dc   Section        0  glcd_spi_lpc1700.o(i.wr_dat)
    wr_dat                                   0x000032dd   Thumb Code    36  glcd_spi_lpc1700.o(i.wr_dat)
    i.wr_dat_only                            0x00003304   Section        0  glcd_spi_lpc1700.o(i.wr_dat_only)
    wr_dat_only                              0x00003305   Thumb Code    18  glcd_spi_lpc1700.o(i.wr_dat_only)
    i.wr_dat_start                           0x00003318   Section        0  glcd_spi_lpc1700.o(i.wr_dat_start)
    wr_dat_start                             0x00003319   Thumb Code    16  glcd_spi_lpc1700.o(i.wr_dat_start)
    i.wr_dat_stop                            0x0000332c   Section        0  glcd_spi_lpc1700.o(i.wr_dat_stop)
    wr_dat_stop                              0x0000332d   Thumb Code     8  glcd_spi_lpc1700.o(i.wr_dat_stop)
    i.wr_reg                                 0x00003338   Section        0  glcd_spi_lpc1700.o(i.wr_reg)
    wr_reg                                   0x00003339   Thumb Code    20  glcd_spi_lpc1700.o(i.wr_reg)
    .constdata                               0x0000334c   Section     6272  glcd_spi_lpc1700.o(.constdata)
    .constdata                               0x00004bcc   Section       56  main.o(.constdata)
    .constdata                               0x00004c04   Section      100  rtx_lib.o(.constdata)
    os_idle_thread_attr                      0x00004c04   Data          36  rtx_lib.o(.constdata)
    os_timer_thread_attr                     0x00004c28   Data          36  rtx_lib.o(.constdata)
    os_timer_mq_attr                         0x00004c4c   Data          24  rtx_lib.o(.constdata)
    .rodata                                  0x00004c68   Section      104  rtx_lib.o(.rodata)
    __tagsym$$used                           0x00004c68   Number         0  rtx_lib.o(.rodata)
    [Anonymous Symbol]                       0x00004cd0   Section        0  rtx_kernel.o(.rodata.str1.4)
    .L.str                                   0x00004cd0   Data          11  rtx_kernel.o(.rodata.str1.4)
    .bss.os                                  0x10000000   Section     4160  rtx_lib.o(.bss.os)
    os_mem                                   0x10000000   Data        4096  rtx_lib.o(.bss.os)
    os_isr_queue                             0x10001000   Data          64  rtx_lib.o(.bss.os)
    .bss.os.msgqueue.cb                      0x10001040   Section       52  rtx_lib.o(.bss.os.msgqueue.cb)
    os_timer_mq_cb                           0x10001040   Data          52  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.mem                     0x10001074   Section       80  rtx_lib.o(.bss.os.msgqueue.mem)
    os_timer_mq_data                         0x10001074   Data          80  rtx_lib.o(.bss.os.msgqueue.mem)
    .bss.os.thread.cb                        0x100010c4   Section      408  rtx_lib.o(.bss.os.thread.cb)
    os_thread_cb                             0x100010c4   Data         272  rtx_lib.o(.bss.os.thread.cb)
    os_idle_thread_cb                        0x100011d4   Data          68  rtx_lib.o(.bss.os.thread.cb)
    os_timer_thread_cb                       0x10001218   Data          68  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.stack                     0x10001260   Section     5936  rtx_lib.o(.bss.os.thread.stack)
    os_thread_def_stack                      0x10001260   Data        4096  rtx_lib.o(.bss.os.thread.stack)
    os_thread_stack                          0x10002260   Data        1072  rtx_lib.o(.bss.os.thread.stack)
    os_idle_thread_stack                     0x10002690   Data         512  rtx_lib.o(.bss.os.thread.stack)
    os_timer_thread_stack                    0x10002890   Data         256  rtx_lib.o(.bss.os.thread.stack)
    .data                                    0x10002990   Section        5  glcd_spi_lpc1700.o(.data)
    Color                                    0x10002990   Data           4  glcd_spi_lpc1700.o(.data)
    Himax                                    0x10002994   Data           1  glcd_spi_lpc1700.o(.data)
    .data                                    0x10002998   Section       32  uart.o(.data)
    .data                                    0x100029b8   Section       28  main.o(.data)
    .data                                    0x100029d4   Section        4  system_lpc17xx.o(.data)
    .data                                    0x100029d8   Section        4  rand.o(.data)
    _rand_state                              0x100029d8   Data           4  rand.o(.data)
    .data.os.thread.mpi                      0x10002a80   Section       48  rtx_lib.o(.data.os.thread.mpi)
    os_mpi_thread                            0x10002a80   Data          24  rtx_lib.o(.data.os.thread.mpi)
    os_mpi_def_stack                         0x10002a98   Data          24  rtx_lib.o(.data.os.thread.mpi)
    .bss                                     0x10002ab0   Section      128  uart.o(.bss)
    .bss                                     0x10002b30   Section      900  main.o(.bss)
    [Anonymous Symbol]                       0x10002eb4   Section        0  os_systick.o(.bss.PendST)
    PendST                                   0x10002eb4   Data           1  os_systick.o(.bss.PendST)
    STACK                                    0x10002eb8   Section     8192  startup_lpc17xx.o(STACK)

    Global Symbols

    Symbol Name                              Value     Ov Type        Size  Object(Section)

    BuildAttributes$$THM_ISAv4$P$D$K$B$S$PE$A:L22UL41UL21$X:L11$S22US41US21$IEEE1$IW$~IW$USESV6$~STKCKD$USESV7$~SHL$OSPACE$ROPI$EBA8$MICROLIB$REQ8$PRES8$EABIv2 0x00000000   Number         0  anon$$obj.o ABSOLUTE
    __ARM_use_no_argv                        0x00000000   Number         0  main.o ABSOLUTE
    __Vectors                                0x00000000   Data           4  startup_lpc17xx.o(RESET)
    .bss.os.evflags.cb$$Base                  - Undefined Weak Reference
    .bss.os.evflags.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mempool.cb$$Base                  - Undefined Weak Reference
    .bss.os.mempool.cb$$Limit                 - Undefined Weak Reference
    .bss.os.mutex.cb$$Base                    - Undefined Weak Reference
    .bss.os.mutex.cb$$Limit                   - Undefined Weak Reference
    .bss.os.semaphore.cb$$Base                - Undefined Weak Reference
    .bss.os.semaphore.cb$$Limit               - Undefined Weak Reference
    .bss.os.timer.cb$$Base                    - Undefined Weak Reference
    .bss.os.timer.cb$$Limit                   - Undefined Weak Reference
    __cpp_initialize__aeabi_                  - Undefined Weak Reference
    __cxa_finalize                            - Undefined Weak Reference
    _clock_init                               - Undefined Weak Reference
    _microlib_exit                            - Undefined Weak Reference
    __main                                   0x000000cd   Thumb Code     0  entry.o(.ARM.Collect$$$$00000000)
    _main_stk                                0x000000cd   Thumb Code     0  entry2.o(.ARM.Collect$$$$00000001)
    _main_scatterload                        0x000000d1   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    __main_after_scatterload                 0x000000d5   Thumb Code     0  entry5.o(.ARM.Collect$$$$00000004)
    _main_clock                              0x000000d5   Thumb Code     0  entry7b.o(.ARM.Collect$$$$00000008)
    _main_cpp_init                           0x000000d5   Thumb Code     0  entry8b.o(.ARM.Collect$$$$0000000A)
    _main_init                               0x000000d5   Thumb Code     0  entry9a.o(.ARM.Collect$$$$0000000B)
    __rt_final_cpp                           0x000000dd   Thumb Code     0  entry10a.o(.ARM.Collect$$$$0000000D)
    __rt_final_exit                          0x000000dd   Thumb Code     0  entry11a.o(.ARM.Collect$$$$0000000F)
    Reset_Handler                            0x000000e1   Thumb Code     8  startup_lpc17xx.o(.text)
    NMI_Handler                              0x000000e9   Thumb Code     2  startup_lpc17xx.o(.text)
    HardFault_Handler                        0x000000eb   Thumb Code     2  startup_lpc17xx.o(.text)
    MemManage_Handler                        0x000000ed   Thumb Code     2  startup_lpc17xx.o(.text)
    BusFault_Handler                         0x000000ef   Thumb Code     2  startup_lpc17xx.o(.text)
    UsageFault_Handler                       0x000000f1   Thumb Code     2  startup_lpc17xx.o(.text)
    DebugMon_Handler                         0x000000f5   Thumb Code     2  startup_lpc17xx.o(.text)
    ADC_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    BOD_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    CANActivity_IRQHandler                   0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    CAN_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    DMA_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT0_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT1_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT2_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    EINT3_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    ENET_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C0_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C1_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    I2C2_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    I2S_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    MCPWM_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL0_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    PLL1_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    PWM1_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    QEI_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    RIT_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    RTC_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    SPI_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP0_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    SSP1_IRQHandler                          0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER0_IRQHandler                        0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER1_IRQHandler                        0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER2_IRQHandler                        0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    TIMER3_IRQHandler                        0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    UART2_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    UART3_IRQHandler                         0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    USBActivity_IRQHandler                   0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    USB_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    WDT_IRQHandler                           0x000000fb   Thumb Code     0  startup_lpc17xx.o(.text)
    SVC_Handler                              0x00000105   Thumb Code   108  irq_cm3.o(.text)
    PendSV_Handler                           0x00000171   Thumb Code    16  irq_cm3.o(.text)
    SysTick_Handler                          0x00000181   Thumb Code    16  irq_cm3.o(.text)
    rand                                     0x00000199   Thumb Code    20  rand.o(.text)
    srand                                    0x000001ad   Thumb Code     6  rand.o(.text)
    __aeabi_memcpy                           0x000001bd   Thumb Code    36  memcpya.o(.text)
    __aeabi_memcpy4                          0x000001bd   Thumb Code     0  memcpya.o(.text)
    __aeabi_memcpy8                          0x000001bd   Thumb Code     0  memcpya.o(.text)
    __aeabi_memset                           0x000001e1   Thumb Code    14  memseta.o(.text)
    __aeabi_memset4                          0x000001e1   Thumb Code     0  memseta.o(.text)
    __aeabi_memset8                          0x000001e1   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr                           0x000001ef   Thumb Code     4  memseta.o(.text)
    __aeabi_memclr4                          0x000001ef   Thumb Code     0  memseta.o(.text)
    __aeabi_memclr8                          0x000001ef   Thumb Code     0  memseta.o(.text)
    _memset$wrapper                          0x000001f3   Thumb Code    18  memseta.o(.text)
    __aeabi_dmul                             0x00000205   Thumb Code   228  dmul.o(.text)
    OS_Tick_AcknowledgeIRQ                   0x000002e9   Thumb Code    12  os_systick.o(.text.OS_Tick_AcknowledgeIRQ)
    __I$use$fp                               0x000002e9   Thumb Code     0  iusefp.o(.text)
    OS_Tick_GetIRQn                          0x000002f5   Thumb Code     6  os_systick.o(.text.OS_Tick_GetIRQn)
    __scatterload_null                       0x000002fb   Thumb Code     2  handlers.o(i.__scatterload_null)
    __aeabi_ddiv                             0x00000301   Thumb Code   222  ddiv.o(.text)
    __aeabi_ui2d                             0x000003df   Thumb Code    26  dfltui.o(.text)
    __aeabi_d2iz                             0x000003f9   Thumb Code    62  dfixi.o(.text)
    __aeabi_llsl                             0x00000437   Thumb Code    30  llshl.o(.text)
    _ll_shift_l                              0x00000437   Thumb Code     0  llshl.o(.text)
    __aeabi_llsr                             0x00000455   Thumb Code    32  llushr.o(.text)
    _ll_ushift_r                             0x00000455   Thumb Code     0  llushr.o(.text)
    _double_round                            0x00000475   Thumb Code    30  depilogue.o(.text)
    _double_epilogue                         0x00000493   Thumb Code   156  depilogue.o(.text)
    __scatterload                            0x00000531   Thumb Code    28  init.o(.text)
    __scatterload_rt2                        0x00000531   Thumb Code     0  init.o(.text)
    __decompress                             0x00000555   Thumb Code     0  __dczerorl2.o(.text)
    __decompress1                            0x00000555   Thumb Code    86  __dczerorl2.o(.text)
    OS_Tick_Enable                           0x0000067d   Thumb Code    44  os_systick.o(.text.OS_Tick_Enable)
    OS_Tick_Setup                            0x000006a9   Thumb Code    64  os_systick.o(.text.OS_Tick_Setup)
    osDelay                                  0x000007a5   Thumb Code    36  rtx_delay.o(.text.osDelay)
    osKernelInitialize                       0x000007c9   Thumb Code    36  rtx_kernel.o(.text.osKernelInitialize)
    osKernelStart                            0x000007ed   Thumb Code    36  rtx_kernel.o(.text.osKernelStart)
    osMessageQueueGet                        0x00000811   Thumb Code   112  rtx_msgqueue.o(.text.osMessageQueueGet)
    osMessageQueueNew                        0x00000881   Thumb Code    36  rtx_msgqueue.o(.text.osMessageQueueNew)
    osMessageQueuePut                        0x000008a5   Thumb Code   128  rtx_msgqueue.o(.text.osMessageQueuePut)
    osMutexAcquire                           0x00000925   Thumb Code    36  rtx_mutex.o(.text.osMutexAcquire)
    osMutexRelease                           0x00000949   Thumb Code    36  rtx_mutex.o(.text.osMutexRelease)
    osRtxMemoryAlloc                         0x0000096d   Thumb Code   128  rtx_memory.o(.text.osRtxMemoryAlloc)
    osRtxMemoryFree                          0x000009ed   Thumb Code    82  rtx_memory.o(.text.osRtxMemoryFree)
    osRtxMemoryInit                          0x00000a3f   Thumb Code    54  rtx_memory.o(.text.osRtxMemoryInit)
    osRtxMemoryPoolAlloc                     0x00000a75   Thumb Code    74  rtx_mempool.o(.text.osRtxMemoryPoolAlloc)
    osRtxMemoryPoolFree                      0x00000abf   Thumb Code    86  rtx_mempool.o(.text.osRtxMemoryPoolFree)
    osRtxMemoryPoolInit                      0x00000b15   Thumb Code    84  rtx_mempool.o(.text.osRtxMemoryPoolInit)
    osRtxMutexOwnerRelease                   0x00000c3f   Thumb Code    68  rtx_mutex.o(.text.osRtxMutexOwnerRelease)
    osRtxPendSV_Handler                      0x00000c85   Thumb Code   144  rtx_system.o(.text.osRtxPendSV_Handler)
    osRtxPostProcess                         0x00000d15   Thumb Code   116  rtx_system.o(.text.osRtxPostProcess)
    osRtxThreadDelayTick                     0x00000ead   Thumb Code    56  rtx_thread.o(.text.osRtxThreadDelayTick)
    osRtxThreadDispatch                      0x00000ee5   Thumb Code    96  rtx_thread.o(.text.osRtxThreadDispatch)
    osRtxThreadListGet                       0x00000f9d   Thumb Code    22  rtx_thread.o(.text.osRtxThreadListGet)
    osRtxThreadListPut                       0x00000fb3   Thumb Code    56  rtx_thread.o(.text.osRtxThreadListPut)
    osRtxThreadListRemove                    0x00000feb   Thumb Code    20  rtx_thread.o(.text.osRtxThreadListRemove)
    osRtxThreadListSort                      0x00000fff   Thumb Code    40  rtx_thread.o(.text.osRtxThreadListSort)
    osRtxThreadReadyPut                      0x00001051   Thumb Code    20  rtx_thread.o(.text.osRtxThreadReadyPut)
    osRtxThreadRegPtr                        0x00001065   Thumb Code     6  rtx_thread.o(.text.osRtxThreadRegPtr)
    osRtxThreadStackCheck                    0x0000106d   Thumb Code    40  rtx_thread.o(.text.osRtxThreadStackCheck)
    osRtxThreadStartup                       0x00001095   Thumb Code    88  rtx_thread.o(.text.osRtxThreadStartup)
    osRtxThreadSwitch                        0x000010ed   Thumb Code    16  rtx_thread.o(.text.osRtxThreadSwitch)
    osRtxThreadWaitEnter                     0x000010fd   Thumb Code    56  rtx_thread.o(.text.osRtxThreadWaitEnter)
    osRtxThreadWaitExit                      0x00001135   Thumb Code    36  rtx_thread.o(.text.osRtxThreadWaitExit)
    osRtxTick_Handler                        0x00001159   Thumb Code   112  rtx_system.o(.text.osRtxTick_Handler)
    osRtxTimerThread                         0x000011c9   Thumb Code    68  rtx_timer.o(.text.osRtxTimerThread)
    osThreadExit                             0x00001265   Thumb Code    12  rtx_thread.o(.text.osThreadExit)
    osThreadNew                              0x00001271   Thumb Code    36  rtx_thread.o(.text.osThreadNew)
    osThreadYield                            0x00001295   Thumb Code    36  rtx_thread.o(.text.osThreadYield)
    Button                                   0x00001b95   Thumb Code    54  main.o(i.Button)
    Clear_Arrow                              0x00001bd9   Thumb Code    40  main.o(i.Clear_Arrow)
    Draw_Arrow                               0x00001c01   Thumb Code   306  main.o(i.Draw_Arrow)
    Draw_Circle                              0x00001d35   Thumb Code   880  main.o(i.Draw_Circle)
    GLCD_Bitmap                              0x000020ad   Thumb Code    82  glcd_spi_lpc1700.o(i.GLCD_Bitmap)
    GLCD_Clear                               0x000020ff   Thumb Code    42  glcd_spi_lpc1700.o(i.GLCD_Clear)
    GLCD_DisplayChar                         0x00002129   Thumb Code    84  glcd_spi_lpc1700.o(i.GLCD_DisplayChar)
    GLCD_DisplayString                       0x00002185   Thumb Code    40  glcd_spi_lpc1700.o(i.GLCD_DisplayString)
    GLCD_DrawChar                            0x000021ad   Thumb Code   150  glcd_spi_lpc1700.o(i.GLCD_DrawChar)
    GLCD_Init                                0x00002249   Thumb Code  1506  glcd_spi_lpc1700.o(i.GLCD_Init)
    GLCD_SetBackColor                        0x00002831   Thumb Code     6  glcd_spi_lpc1700.o(i.GLCD_SetBackColor)
    GLCD_SetTextColor                        0x0000283d   Thumb Code     6  glcd_spi_lpc1700.o(i.GLCD_SetTextColor)
    GLCD_SetWindow                           0x00002849   Thumb Code   168  glcd_spi_lpc1700.o(i.GLCD_SetWindow)
    GLCD_WindowMax                           0x000028f5   Thumb Code    18  glcd_spi_lpc1700.o(i.GLCD_WindowMax)
    Monitor                                  0x00002909   Thumb Code   636  main.o(i.Monitor)
    Potentiometer                            0x00002bb9   Thumb Code   148  main.o(i.Potentiometer)
    Score                                    0x00002c71   Thumb Code   332  main.o(i.Score)
    StartUp                                  0x00002dc5   Thumb Code   102  main.o(i.StartUp)
    SystemInit                               0x00002e35   Thumb Code   302  system_lpc17xx.o(i.SystemInit)
    UART0_IRQHandler                         0x00002f75   Thumb Code    88  uart.o(i.UART0_IRQHandler)
    UART1_IRQHandler                         0x00002fdd   Thumb Code    90  uart.o(i.UART1_IRQHandler)
    __scatterload_copy                       0x0000304d   Thumb Code    14  handlers.o(i.__scatterload_copy)
    __scatterload_zeroinit                   0x0000305b   Thumb Code    14  handlers.o(i.__scatterload_zeroinit)
    clearBubble                              0x00003069   Thumb Code    86  main.o(i.clearBubble)
    main                                     0x000030d9   Thumb Code    52  main.o(i.main)
    osRtxErrorNotify                         0x0000311d   Thumb Code    32  rtx_config.o(i.osRtxErrorNotify)
    osRtxIdleThread                          0x0000313d   Thumb Code     4  rtx_config.o(i.osRtxIdleThread)
    Font_6x8_h                               0x0000334c   Data         896  glcd_spi_lpc1700.o(.constdata)
    Font_16x24_h                             0x000036cc   Data        5376  glcd_spi_lpc1700.o(.constdata)
    osRtxUserSVC                             0x00004c64   Data           4  rtx_lib.o(.constdata)
    osRtxConfig                              0x00004c68   Data         104  rtx_lib.o(.rodata)
    Region$$Table$$Base                      0x00004cdc   Number         0  anon$$obj.o(Region$$Table)
    Region$$Table$$Limit                     0x00004cfc   Number         0  anon$$obj.o(Region$$Table)
    .bss.os.msgqueue.cb$$Base                0x10001040   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.msgqueue.cb$$Limit               0x10001074   Number         0  rtx_lib.o(.bss.os.msgqueue.cb)
    .bss.os.thread.cb$$Base                  0x100010c4   Number         0  rtx_lib.o(.bss.os.thread.cb)
    .bss.os.thread.cb$$Limit                 0x1000125c   Number         0  rtx_lib.o(.bss.os.thread.cb)
    ITM_RxBuffer                             0x10002998   Data           4  uart.o(.data)
    UART0Status                              0x1000299c   Data           4  uart.o(.data)
    UART1Status                              0x100029a0   Data           4  uart.o(.data)
    UART0TxEmpty                             0x100029a4   Data           1  uart.o(.data)
    UART1TxEmpty                             0x100029a5   Data           1  uart.o(.data)
    UART0Count                               0x100029a8   Data           4  uart.o(.data)
    UART1Count                               0x100029ac   Data           4  uart.o(.data)
    RcvLock0                                 0x100029b0   Data           1  uart.o(.data)
    SndLock0                                 0x100029b1   Data           1  uart.o(.data)
    RcvLock1                                 0x100029b2   Data           1  uart.o(.data)
    SndLock1                                 0x100029b3   Data           1  uart.o(.data)
    i                                        0x100029b4   Data           4  uart.o(.data)
    mutex_id_1                               0x100029b8   Data           4  main.o(.data)
    mutex_id_2                               0x100029bc   Data           4  main.o(.data)
    arrow_x                                  0x100029c0   Data           4  main.o(.data)
    arrow_x_prev                             0x100029c4   Data           4  main.o(.data)
    pushed                                   0x100029c8   Data           1  main.o(.data)
    rows                                     0x100029cc   Data           4  main.o(.data)
    points                                   0x100029d0   Data           4  main.o(.data)
    SystemCoreClock                          0x100029d4   Data           4  system_lpc17xx.o(.data)
    osRtxInfo                                0x100029dc   Data         164  rtx_kernel.o(.data.os)
    UART0Buffer                              0x10002ab0   Data          64  uart.o(.bss)
    UART1Buffer                              0x10002af0   Data          64  uart.o(.bss)
    disp                                     0x10002b30   Data         300  main.o(.bss)
    color                                    0x10002c5c   Data         600  main.o(.bss)
    __initial_sp                             0x10004eb8   Data           0  startup_lpc17xx.o(STACK)



==============================================================================

Memory Map of the image

  Image Entry point : 0x000000e1

  Load Region LR_1 (Base: 0x00000000, Size: 0x000077ac, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00004d7c])

    Execution Region ER_RO (Exec base: 0x00000000, Load base: 0x00000000, Size: 0x00004cfc, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x00000000   0x00000000   0x000000cc   Data   RO          695    RESET               startup_lpc17xx.o
    0x000000cc   0x000000cc   0x00000000   Code   RO         1221  * .ARM.Collect$$$$00000000  mc_w.l(entry.o)
    0x000000cc   0x000000cc   0x00000004   Code   RO         1243    .ARM.Collect$$$$00000001  mc_w.l(entry2.o)
    0x000000d0   0x000000d0   0x00000004   Code   RO         1246    .ARM.Collect$$$$00000004  mc_w.l(entry5.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         1248    .ARM.Collect$$$$00000008  mc_w.l(entry7b.o)
    0x000000d4   0x000000d4   0x00000000   Code   RO         1250    .ARM.Collect$$$$0000000A  mc_w.l(entry8b.o)
    0x000000d4   0x000000d4   0x00000008   Code   RO         1251    .ARM.Collect$$$$0000000B  mc_w.l(entry9a.o)
    0x000000dc   0x000000dc   0x00000000   Code   RO         1253    .ARM.Collect$$$$0000000D  mc_w.l(entry10a.o)
    0x000000dc   0x000000dc   0x00000000   Code   RO         1255    .ARM.Collect$$$$0000000F  mc_w.l(entry11a.o)
    0x000000dc   0x000000dc   0x00000004   Code   RO         1244    .ARM.Collect$$$$00002712  mc_w.l(entry2.o)
    0x000000e0   0x000000e0   0x00000024   Code   RO          697  * .text               startup_lpc17xx.o
    0x00000104   0x00000104   0x00000094   Code   RO          996    .text               RTX_CM3.lib(irq_cm3.o)
    0x00000198   0x00000198   0x00000024   Code   RO         1226    .text               mc_w.l(rand.o)
    0x000001bc   0x000001bc   0x00000024   Code   RO         1229    .text               mc_w.l(memcpya.o)
    0x000001e0   0x000001e0   0x00000024   Code   RO         1231    .text               mc_w.l(memseta.o)
    0x00000204   0x00000204   0x000000e4   Code   RO         1235    .text               mf_w.l(dmul.o)
    0x000002e8   0x000002e8   0x00000000   Code   RO         1261    .text               mc_w.l(iusefp.o)
    0x000002e8   0x000002e8   0x0000000c   Code   RO         1139    .text.OS_Tick_AcknowledgeIRQ  RTX_CM3.lib(os_systick.o)
    0x000002f4   0x000002f4   0x00000006   Code   RO         1141    .text.OS_Tick_GetIRQn  RTX_CM3.lib(os_systick.o)
    0x000002fa   0x000002fa   0x00000002   Code   RO         1269    i.__scatterload_null  mc_w.l(handlers.o)
    0x000002fc   0x000002fc   0x00000004   Code   RO          696    .ARM.__at_0x02FC    startup_lpc17xx.o
    0x00000300   0x00000300   0x000000de   Code   RO         1237    .text               mf_w.l(ddiv.o)
    0x000003de   0x000003de   0x0000001a   Code   RO         1239    .text               mf_w.l(dfltui.o)
    0x000003f8   0x000003f8   0x0000003e   Code   RO         1241    .text               mf_w.l(dfixi.o)
    0x00000436   0x00000436   0x0000001e   Code   RO         1257    .text               mc_w.l(llshl.o)
    0x00000454   0x00000454   0x00000020   Code   RO         1259    .text               mc_w.l(llushr.o)
    0x00000474   0x00000474   0x000000ba   Code   RO         1262    .text               mf_w.l(depilogue.o)
    0x0000052e   0x0000052e   0x00000002   PAD
    0x00000530   0x00000530   0x00000024   Code   RO         1264    .text               mc_w.l(init.o)
    0x00000554   0x00000554   0x00000056   Code   RO         1274    .text               mc_w.l(__dczerorl2.o)
    0x000005aa   0x000005aa   0x00000046   Code   RO         1203    .text.MessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x000005f0   0x000005f0   0x00000064   Code   RO         1197    .text.MessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000654   0x00000654   0x00000026   Code   RO         1195    .text.MessageQueueRemove  RTX_CM3.lib(rtx_msgqueue.o)
    0x0000067a   0x0000067a   0x00000002   PAD
    0x0000067c   0x0000067c   0x0000002c   Code   RO         1135    .text.OS_Tick_Enable  RTX_CM3.lib(os_systick.o)
    0x000006a8   0x000006a8   0x00000040   Code   RO         1133    .text.OS_Tick_Setup  RTX_CM3.lib(os_systick.o)
    0x000006e8   0x000006e8   0x0000006a   Code   RO          883    .text.ThreadFlagsCheck  RTX_CM3.lib(rtx_thread.o)
    0x00000752   0x00000752   0x00000002   PAD
    0x00000754   0x00000754   0x00000050   Code   RO         1017    .text.TimerInsert   RTX_CM3.lib(rtx_timer.o)
    0x000007a4   0x000007a4   0x00000024   Code   RO          940    .text.osDelay       RTX_CM3.lib(rtx_delay.o)
    0x000007c8   0x000007c8   0x00000024   Code   RO          740    .text.osKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x000007ec   0x000007ec   0x00000024   Code   RO          750    .text.osKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x00000810   0x00000810   0x00000070   Code   RO         1169    .text.osMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000880   0x00000880   0x00000024   Code   RO         1163    .text.osMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x000008a4   0x000008a4   0x00000080   Code   RO         1167    .text.osMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000924   0x00000924   0x00000024   Code   RO          965    .text.osMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x00000948   0x00000948   0x00000024   Code   RO          967    .text.osMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x0000096c   0x0000096c   0x00000080   Code   RO         1046    .text.osRtxMemoryAlloc  RTX_CM3.lib(rtx_memory.o)
    0x000009ec   0x000009ec   0x00000052   Code   RO         1048    .text.osRtxMemoryFree  RTX_CM3.lib(rtx_memory.o)
    0x00000a3e   0x00000a3e   0x00000036   Code   RO         1044    .text.osRtxMemoryInit  RTX_CM3.lib(rtx_memory.o)
    0x00000a74   0x00000a74   0x0000004a   Code   RO         1063    .text.osRtxMemoryPoolAlloc  RTX_CM3.lib(rtx_mempool.o)
    0x00000abe   0x00000abe   0x00000056   Code   RO         1065    .text.osRtxMemoryPoolFree  RTX_CM3.lib(rtx_mempool.o)
    0x00000b14   0x00000b14   0x00000054   Code   RO         1061    .text.osRtxMemoryPoolInit  RTX_CM3.lib(rtx_mempool.o)
    0x00000b68   0x00000b68   0x000000d6   Code   RO         1193    .text.osRtxMessageQueuePostProcess  RTX_CM3.lib(rtx_msgqueue.o)
    0x00000c3e   0x00000c3e   0x00000044   Code   RO          959    .text.osRtxMutexOwnerRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00000c82   0x00000c82   0x00000002   PAD
    0x00000c84   0x00000c84   0x00000090   Code   RO         1118    .text.osRtxPendSV_Handler  RTX_CM3.lib(rtx_system.o)
    0x00000d14   0x00000d14   0x00000074   Code   RO         1120    .text.osRtxPostProcess  RTX_CM3.lib(rtx_system.o)
    0x00000d88   0x00000d88   0x00000038   Code   RO          825    .text.osRtxThreadBlock  RTX_CM3.lib(rtx_thread.o)
    0x00000dc0   0x00000dc0   0x00000094   Code   RO          833    .text.osRtxThreadDelayInsert  RTX_CM3.lib(rtx_thread.o)
    0x00000e54   0x00000e54   0x00000058   Code   RO          829    .text.osRtxThreadDelayRemove  RTX_CM3.lib(rtx_thread.o)
    0x00000eac   0x00000eac   0x00000038   Code   RO          815    .text.osRtxThreadDelayTick  RTX_CM3.lib(rtx_thread.o)
    0x00000ee4   0x00000ee4   0x00000060   Code   RO          823    .text.osRtxThreadDispatch  RTX_CM3.lib(rtx_thread.o)
    0x00000f44   0x00000f44   0x00000058   Code   RO          909    .text.osRtxThreadFree  RTX_CM3.lib(rtx_thread.o)
    0x00000f9c   0x00000f9c   0x00000016   Code   RO          807    .text.osRtxThreadListGet  RTX_CM3.lib(rtx_thread.o)
    0x00000fb2   0x00000fb2   0x00000038   Code   RO          805    .text.osRtxThreadListPut  RTX_CM3.lib(rtx_thread.o)
    0x00000fea   0x00000fea   0x00000014   Code   RO          811    .text.osRtxThreadListRemove  RTX_CM3.lib(rtx_thread.o)
    0x00000ffe   0x00000ffe   0x00000028   Code   RO          809    .text.osRtxThreadListSort  RTX_CM3.lib(rtx_thread.o)
    0x00001026   0x00001026   0x0000002a   Code   RO          881    .text.osRtxThreadPostProcess  RTX_CM3.lib(rtx_thread.o)
    0x00001050   0x00001050   0x00000014   Code   RO          813    .text.osRtxThreadReadyPut  RTX_CM3.lib(rtx_thread.o)
    0x00001064   0x00001064   0x00000006   Code   RO          817    .text.osRtxThreadRegPtr  RTX_CM3.lib(rtx_thread.o)
    0x0000106a   0x0000106a   0x00000002   PAD
    0x0000106c   0x0000106c   0x00000028   Code   RO          821    .text.osRtxThreadStackCheck  RTX_CM3.lib(rtx_thread.o)
    0x00001094   0x00001094   0x00000058   Code   RO          835    .text.osRtxThreadStartup  RTX_CM3.lib(rtx_thread.o)
    0x000010ec   0x000010ec   0x00000010   Code   RO          819    .text.osRtxThreadSwitch  RTX_CM3.lib(rtx_thread.o)
    0x000010fc   0x000010fc   0x00000038   Code   RO          831    .text.osRtxThreadWaitEnter  RTX_CM3.lib(rtx_thread.o)
    0x00001134   0x00001134   0x00000024   Code   RO          827    .text.osRtxThreadWaitExit  RTX_CM3.lib(rtx_thread.o)
    0x00001158   0x00001158   0x00000070   Code   RO         1116    .text.osRtxTick_Handler  RTX_CM3.lib(rtx_system.o)
    0x000011c8   0x000011c8   0x00000044   Code   RO         1001    .text.osRtxTimerThread  RTX_CM3.lib(rtx_timer.o)
    0x0000120c   0x0000120c   0x00000058   Code   RO         1003    .text.osRtxTimerTick  RTX_CM3.lib(rtx_timer.o)
    0x00001264   0x00001264   0x0000000c   Code   RO          865    .text.osThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x00001270   0x00001270   0x00000024   Code   RO          839    .text.osThreadNew   RTX_CM3.lib(rtx_thread.o)
    0x00001294   0x00001294   0x00000024   Code   RO          855    .text.osThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x000012b8   0x000012b8   0x00000014   Code   RO          944    .text.svcRtxDelay   RTX_CM3.lib(rtx_delay.o)
    0x000012cc   0x000012cc   0x00000178   Code   RO          778    .text.svcRtxKernelInitialize  RTX_CM3.lib(rtx_kernel.o)
    0x00001444   0x00001444   0x0000008c   Code   RO          780    .text.svcRtxKernelStart  RTX_CM3.lib(rtx_kernel.o)
    0x000014d0   0x000014d0   0x000000f0   Code   RO         1205    .text.svcRtxMessageQueueGet  RTX_CM3.lib(rtx_msgqueue.o)
    0x000015c0   0x000015c0   0x00000138   Code   RO         1191    .text.svcRtxMessageQueueNew  RTX_CM3.lib(rtx_msgqueue.o)
    0x000016f8   0x000016f8   0x000000c8   Code   RO         1201    .text.svcRtxMessageQueuePut  RTX_CM3.lib(rtx_msgqueue.o)
    0x000017c0   0x000017c0   0x00000098   Code   RO          977    .text.svcRtxMutexAcquire  RTX_CM3.lib(rtx_mutex.o)
    0x00001858   0x00001858   0x000000bc   Code   RO          979    .text.svcRtxMutexRelease  RTX_CM3.lib(rtx_mutex.o)
    0x00001914   0x00001914   0x00000068   Code   RO          913    .text.svcRtxThreadExit  RTX_CM3.lib(rtx_thread.o)
    0x0000197c   0x0000197c   0x000001e0   Code   RO          837    .text.svcRtxThreadNew  RTX_CM3.lib(rtx_thread.o)
    0x00001b5c   0x00001b5c   0x00000038   Code   RO          899    .text.svcRtxThreadYield  RTX_CM3.lib(rtx_thread.o)
    0x00001b94   0x00001b94   0x00000044   Code   RO          448    i.Button            main.o
    0x00001bd8   0x00001bd8   0x00000028   Code   RO          449    i.Clear_Arrow       main.o
    0x00001c00   0x00001c00   0x00000132   Code   RO          450    i.Draw_Arrow        main.o
    0x00001d32   0x00001d32   0x00000002   PAD
    0x00001d34   0x00001d34   0x00000378   Code   RO          451    i.Draw_Circle       main.o
    0x000020ac   0x000020ac   0x00000052   Code   RO          143    i.GLCD_Bitmap       glcd_spi_lpc1700.o
    0x000020fe   0x000020fe   0x0000002a   Code   RO          144    i.GLCD_Clear        glcd_spi_lpc1700.o
    0x00002128   0x00002128   0x0000005c   Code   RO          146    i.GLCD_DisplayChar  glcd_spi_lpc1700.o
    0x00002184   0x00002184   0x00000028   Code   RO          147    i.GLCD_DisplayString  glcd_spi_lpc1700.o
    0x000021ac   0x000021ac   0x0000009c   Code   RO          148    i.GLCD_DrawChar     glcd_spi_lpc1700.o
    0x00002248   0x00002248   0x000005e8   Code   RO          149    i.GLCD_Init         glcd_spi_lpc1700.o
    0x00002830   0x00002830   0x0000000c   Code   RO          152    i.GLCD_SetBackColor  glcd_spi_lpc1700.o
    0x0000283c   0x0000283c   0x0000000c   Code   RO          153    i.GLCD_SetTextColor  glcd_spi_lpc1700.o
    0x00002848   0x00002848   0x000000ac   Code   RO          154    i.GLCD_SetWindow    glcd_spi_lpc1700.o
    0x000028f4   0x000028f4   0x00000012   Code   RO          155    i.GLCD_WindowMax    glcd_spi_lpc1700.o
    0x00002906   0x00002906   0x00000002   PAD
    0x00002908   0x00002908   0x000002b0   Code   RO          452    i.Monitor           main.o
    0x00002bb8   0x00002bb8   0x000000b8   Code   RO          453    i.Potentiometer     main.o
    0x00002c70   0x00002c70   0x00000154   Code   RO          454    i.Score             main.o
    0x00002dc4   0x00002dc4   0x00000070   Code   RO          455    i.StartUp           main.o
    0x00002e34   0x00002e34   0x00000140   Code   RO          707    i.SystemInit        system_lpc17xx.o
    0x00002f74   0x00002f74   0x00000068   Code   RO          337    i.UART0_IRQHandler  uart.o
    0x00002fdc   0x00002fdc   0x00000070   Code   RO          338    i.UART1_IRQHandler  uart.o
    0x0000304c   0x0000304c   0x0000000e   Code   RO         1268    i.__scatterload_copy  mc_w.l(handlers.o)
    0x0000305a   0x0000305a   0x0000000e   Code   RO         1270    i.__scatterload_zeroinit  mc_w.l(handlers.o)
    0x00003068   0x00003068   0x00000060   Code   RO          456    i.clearBubble       main.o
    0x000030c8   0x000030c8   0x0000000e   Code   RO          158    i.delay             glcd_spi_lpc1700.o
    0x000030d6   0x000030d6   0x00000002   PAD
    0x000030d8   0x000030d8   0x00000044   Code   RO          457    i.main              main.o
    0x0000311c   0x0000311c   0x00000020   Code   RO          662    i.osRtxErrorNotify  rtx_config.o
    0x0000313c   0x0000313c   0x00000004   Code   RO          663    i.osRtxIdleThread   rtx_config.o
    0x00003140   0x00003140   0x0000008c   Code   RO          159    i.rd_id_man         glcd_spi_lpc1700.o
    0x000031cc   0x000031cc   0x00000048   Code   RO          160    i.rd_reg            glcd_spi_lpc1700.o
    0x00003214   0x00003214   0x00000020   Code   RO          161    i.spi_tran          glcd_spi_lpc1700.o
    0x00003234   0x00003234   0x00000080   Code   RO          162    i.spi_tran_man      glcd_spi_lpc1700.o
    0x000032b4   0x000032b4   0x00000028   Code   RO          163    i.wr_cmd            glcd_spi_lpc1700.o
    0x000032dc   0x000032dc   0x00000028   Code   RO          164    i.wr_dat            glcd_spi_lpc1700.o
    0x00003304   0x00003304   0x00000012   Code   RO          165    i.wr_dat_only       glcd_spi_lpc1700.o
    0x00003316   0x00003316   0x00000002   PAD
    0x00003318   0x00003318   0x00000014   Code   RO          166    i.wr_dat_start      glcd_spi_lpc1700.o
    0x0000332c   0x0000332c   0x0000000c   Code   RO          167    i.wr_dat_stop       glcd_spi_lpc1700.o
    0x00003338   0x00003338   0x00000014   Code   RO          168    i.wr_reg            glcd_spi_lpc1700.o
    0x0000334c   0x0000334c   0x00001880   Data   RO          169    .constdata          glcd_spi_lpc1700.o
    0x00004bcc   0x00004bcc   0x00000038   Data   RO          459    .constdata          main.o
    0x00004c04   0x00004c04   0x00000064   Data   RO          624    .constdata          rtx_lib.o
    0x00004c68   0x00004c68   0x00000068   Data   RO          627    .rodata             rtx_lib.o
    0x00004cd0   0x00004cd0   0x0000000b   Data   RO          792    .rodata.str1.4      RTX_CM3.lib(rtx_kernel.o)
    0x00004cdb   0x00004cdb   0x00000001   PAD
    0x00004cdc   0x00004cdc   0x00000020   Data   RO         1266    Region$$Table       anon$$obj.o


    Execution Region ER_RW (Exec base: 0x10000000, Load base: 0x00004cfc, Size: 0x00002ab0, Max: 0xffffffff, ABSOLUTE, COMPRESSED[0x00000080])

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10000000   COMPRESSED   0x00001040   Data   RW          619    .bss.os             rtx_lib.o
    0x10001040   COMPRESSED   0x00000034   Data   RW          620    .bss.os.msgqueue.cb  rtx_lib.o
    0x10001074   COMPRESSED   0x00000050   Data   RW          621    .bss.os.msgqueue.mem  rtx_lib.o
    0x100010c4   COMPRESSED   0x00000198   Data   RW          622    .bss.os.thread.cb   rtx_lib.o
    0x1000125c   COMPRESSED   0x00000004   PAD
    0x10001260   COMPRESSED   0x00001730   Data   RW          623    .bss.os.thread.stack  rtx_lib.o
    0x10002990   COMPRESSED   0x00000005   Data   RW          170    .data               glcd_spi_lpc1700.o
    0x10002995   COMPRESSED   0x00000003   PAD
    0x10002998   COMPRESSED   0x00000020   Data   RW          347    .data               uart.o
    0x100029b8   COMPRESSED   0x0000001c   Data   RW          460    .data               main.o
    0x100029d4   COMPRESSED   0x00000004   Data   RW          708    .data               system_lpc17xx.o
    0x100029d8   COMPRESSED   0x00000004   Data   RW         1227    .data               mc_w.l(rand.o)
    0x100029dc   COMPRESSED   0x000000a4   Data   RW          793    .data.os            RTX_CM3.lib(rtx_kernel.o)
    0x10002a80   COMPRESSED   0x00000030   Data   RW          626    .data.os.thread.mpi  rtx_lib.o


    Execution Region ER_ZI (Exec base: 0x10002ab0, Load base: 0x00004d7c, Size: 0x00002408, Max: 0xffffffff, ABSOLUTE)

    Exec Addr    Load Addr    Size         Type   Attr      Idx    E Section Name        Object

    0x10002ab0        -       0x00000080   Zero   RW          346    .bss                uart.o
    0x10002b30        -       0x00000384   Zero   RW          458    .bss                main.o
    0x10002eb4        -       0x00000001   Zero   RW         1151    .bss.PendST         RTX_CM3.lib(os_systick.o)
    0x10002eb5   0x00004d7c   0x00000003   PAD
    0x10002eb8        -       0x00002000   Zero   RW          693    STACK               startup_lpc17xx.o


==============================================================================

Image component sizes


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Object Name

         0          0          0          0          0       4556   glcd_scroll.o
      2674         94       6272          5          0      31007   glcd_spi_lpc1700.o
      2790        154         56         28        900      12102   main.o
        36          6          0          0          0        949   rtx_config.o
         0          0        204      10684          0      12347   rtx_lib.o
        40         12        204          0       8192        980   startup_lpc17xx.o
       320         18          0          4          0        795   system_lpc17xx.o
       216         38          0         32        128       2199   uart.o

    ----------------------------------------------------------------------
      6084        322       6768      10760       9220      64935   Object Totals
         0          0         32          0          0          0   (incl. Generated)
         8          0          0          7          0          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Member Name

       148         10          0          0          0        488   irq_cm3.o
       126         32          0          0          1       3575   os_systick.o
        56          4          0          0          0       3088   rtx_delay.o
       588         36         11        164          0      18714   rtx_kernel.o
       264          0          0          0          0       2707   rtx_memory.o
       244          0          0          0          0      15835   rtx_mempool.o
      1450         28          0          0          0      18606   rtx_msgqueue.o
       480         16          0          0          0      10258   rtx_mutex.o
       372         24          0          0          0       5544   rtx_system.o
      1804        100          0          0          0      33794   rtx_thread.o
       236         20          0          0          0      10983   rtx_timer.o
        86          0          0          0          0          0   __dczerorl2.o
         0          0          0          0          0          0   entry.o
         0          0          0          0          0          0   entry10a.o
         0          0          0          0          0          0   entry11a.o
         8          4          0          0          0          0   entry2.o
         4          0          0          0          0          0   entry5.o
         0          0          0          0          0          0   entry7b.o
         0          0          0          0          0          0   entry8b.o
         8          4          0          0          0          0   entry9a.o
        30          0          0          0          0          0   handlers.o
        36          8          0          0          0         68   init.o
         0          0          0          0          0          0   iusefp.o
        30          0          0          0          0         68   llshl.o
        32          0          0          0          0         68   llushr.o
        36          0          0          0          0         68   memcpya.o
        36          0          0          0          0        108   memseta.o
        36         10          0          4          0        136   rand.o
       222          0          0          0          0        100   ddiv.o
       186          0          0          0          0        176   depilogue.o
        62          0          0          0          0         80   dfixi.o
        26          0          0          0          0         76   dfltui.o
       228          0          0          0          0         96   dmul.o

    ----------------------------------------------------------------------
      6844        296         12        168          4     124636   Library Totals
        10          0          1          0          3          0   (incl. Padding)

    ----------------------------------------------------------------------

      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   Library Name

      5768        270         11        164          1     123592   RTX_CM3.lib
       342         26          0          4          0        516   mc_w.l
       724          0          0          0          0        528   mf_w.l

    ----------------------------------------------------------------------
      6844        296         12        168          4     124636   Library Totals

    ----------------------------------------------------------------------

==============================================================================


      Code (inc. data)   RO Data    RW Data    ZI Data      Debug   

     12928        618       6780      10928       9224     187371   Grand Totals
     12928        618       6780        128       9224     187371   ELF Image Totals (compressed)
     12928        618       6780        128          0          0   ROM Totals

==============================================================================

    Total RO  Size (Code + RO Data)                19708 (  19.25kB)
    Total RW  Size (RW Data + ZI Data)             20152 (  19.68kB)
    Total ROM Size (Code + RO Data + RW Data)      19836 (  19.37kB)

==============================================================================

